1
00:00:01,250 --> 00:00:06,830
All right, so for this challenge 25, you need to help this person with getting their vehicle entry

2
00:00:06,830 --> 00:00:10,890
form to work properly, and so please see if you can fix the following issues.

3
00:00:11,270 --> 00:00:16,820
So basically, our first kind of objective is to try and reproduce this issue set that we're given here.

4
00:00:16,820 --> 00:00:22,820
So below here, this is the car entry form and we're just going to go and read through some of these

5
00:00:22,820 --> 00:00:24,770
issues that this person pointed out with this form.

6
00:00:25,100 --> 00:00:30,770
So first it says the form doesn't let me submit and always shows please enter a value.

7
00:00:31,220 --> 00:00:36,830
Please make sure all fields are required except for condition which is not or which is optional.

8
00:00:37,530 --> 00:00:38,660
So it says it doesn't.

9
00:00:38,660 --> 00:00:39,330
Let me submit.

10
00:00:39,800 --> 00:00:46,070
So clearly if I click this, so maybe let's try typing in a few things and I click this, and as you

11
00:00:46,070 --> 00:00:48,170
could see, nothing is submitted.

12
00:00:48,560 --> 00:00:53,110
And if we go up, it says it always shows please on our value.

13
00:00:53,120 --> 00:00:55,610
So it always shows, please enter our value.

14
00:00:55,970 --> 00:01:03,290
If I go here, you could see even even though I'm typing a value, the value is actually I'm still getting

15
00:01:03,290 --> 00:01:05,650
this error that says please enter a value.

16
00:01:06,020 --> 00:01:12,260
So it says, please make sure all fields are required except for condition which is optional.

17
00:01:12,620 --> 00:01:16,880
So condition is should be the only field that's optional.

18
00:01:16,920 --> 00:01:22,430
OK, and we can look at start looking at some clues here that tell us certain things.

19
00:01:22,430 --> 00:01:30,020
For example, Condition has an asterisk here, which may indicate that it's currently in a state of

20
00:01:30,020 --> 00:01:31,070
being required.

21
00:01:31,430 --> 00:01:33,590
But that's just my hunch from looking at this.

22
00:01:33,800 --> 00:01:40,250
But I can see clearly that the please enter a value is validation error that seems to be failing.

23
00:01:40,250 --> 00:01:47,450
And so my objective here, high level, is to fix that validation error and then, of course, go ahead

24
00:01:47,450 --> 00:01:48,500
and actually submit.

25
00:01:48,500 --> 00:01:48,740
Right.

26
00:01:48,740 --> 00:01:52,130
It doesn't look like it's confirming that submission at all.

27
00:01:52,400 --> 00:01:57,470
So that's our step kind of after that, because if we are constantly getting validation errors, we'll

28
00:01:57,470 --> 00:01:59,450
never get to our submit.

29
00:01:59,450 --> 00:01:59,720
Right.

30
00:01:59,990 --> 00:02:01,840
And so our validation errors are incorrect.

31
00:02:01,850 --> 00:02:04,970
We have a value and we're being told that we need to enter a value.

32
00:02:04,970 --> 00:02:11,680
And if we go up and type in on more of these, you can see that that is the case for all of them.

33
00:02:11,840 --> 00:02:16,300
So please enter a value appears regardless of whether you have a value, that's the main issue.

34
00:02:16,700 --> 00:02:22,970
So next, it says if a field has a validation error, please remove the error after I start typing.

35
00:02:23,240 --> 00:02:27,950
So as you could see here a lot of times and forms like this, when you start typing, the error should

36
00:02:27,950 --> 00:02:31,400
then go away indicating that you have fixed that that error.

37
00:02:31,400 --> 00:02:36,400
Now, right after submitting, I want the vehicles to be listed in the table below.

38
00:02:36,560 --> 00:02:42,170
So we have to get that submit to work first and then we're going to expect to see the vehicles appear

39
00:02:42,170 --> 00:02:43,930
in this what looks like a table here below.

40
00:02:44,360 --> 00:02:47,870
So that is the part three, part four.

41
00:02:47,870 --> 00:02:50,810
It says after submitting, please clear the form.

42
00:02:51,260 --> 00:02:54,650
So when you submit, you would expect these to go away.

43
00:02:54,770 --> 00:02:56,630
The text entered to go away.

44
00:02:57,170 --> 00:03:03,140
And when first loading the form or after submitting, I want to focus the first TextField.

45
00:03:03,500 --> 00:03:08,600
So seems like they want some type of focused functionality that automatically happens.

46
00:03:08,600 --> 00:03:08,840
Right.

47
00:03:08,850 --> 00:03:11,660
So you could see here when I'm in it, it's focused.

48
00:03:11,660 --> 00:03:11,900
Right.

49
00:03:11,900 --> 00:03:13,670
There's a focused style around that.

50
00:03:13,680 --> 00:03:14,540
That's what that means.

51
00:03:14,780 --> 00:03:16,730
And you could research that if you weren't sure.

52
00:03:16,730 --> 00:03:19,700
But the correct terminology here is focus.

53
00:03:19,730 --> 00:03:23,840
This is what indicates that this input is currently being active.

54
00:03:24,080 --> 00:03:28,640
And Tab's typically to, you know, change the focus of the elements.

55
00:03:28,640 --> 00:03:30,280
But that's just a side note.

56
00:03:30,380 --> 00:03:35,060
So that sounds like we have a good chunk of problems to work on now.

57
00:03:35,060 --> 00:03:39,080
So let's go ahead and open up our sandbox to start looking at the code.

58
00:03:40,070 --> 00:03:40,460
All right.

59
00:03:40,460 --> 00:03:43,250
So as you can see here, I'm in the code sandbox now for a challenge.

60
00:03:43,250 --> 00:03:43,820
Twenty five.

61
00:03:44,090 --> 00:03:48,170
And if I scroll down here, I can just look at some of the code.

62
00:03:48,170 --> 00:03:54,950
You could see here that we have a function here, validation text fields is the component.

63
00:03:54,950 --> 00:04:00,470
We have some styling, we have a lot of material UI imports being added in here.

64
00:04:00,470 --> 00:04:04,400
So that's a good clue to start looking into what we're going to be working with.

65
00:04:04,400 --> 00:04:08,210
Your main component here is going to be the TextField.

66
00:04:09,210 --> 00:04:16,290
Going down, we have a style here, this just looks like some boilerplate styles that we might not need

67
00:04:16,290 --> 00:04:21,030
to adjust for this specific challenge going down here we have.

68
00:04:22,170 --> 00:04:32,130
The initialization of react you state and some styles, we have a validate function, so that's a good

69
00:04:32,130 --> 00:04:32,610
clue.

70
00:04:33,730 --> 00:04:39,200
It has errors, a submit function, an update value function and then a bunch of markup.

71
00:04:39,630 --> 00:04:45,450
So you could see we are looping over fields and we are rendering a textfield.

72
00:04:45,450 --> 00:04:48,480
So that is the form, as you can see with the form here.

73
00:04:48,990 --> 00:04:55,710
And then going down, we have a grid which represents our vehicle table and vehicle table.

74
00:04:55,980 --> 00:05:00,120
Looks like it's imported up here from that vehicle table.

75
00:05:00,480 --> 00:05:07,140
So that is a good clue that we have another file here that as the table and going up.

76
00:05:07,440 --> 00:05:10,530
You may just want to glance at the other file in here.

77
00:05:10,560 --> 00:05:11,370
Maybe you did.

78
00:05:11,370 --> 00:05:13,740
That is the field options.

79
00:05:13,740 --> 00:05:18,320
So the field options here is just looks like the fields, right?

80
00:05:18,330 --> 00:05:25,650
The field configuration or the JSON object that has the parameters or options for rendering our form.

81
00:05:26,040 --> 00:05:26,430
So.

82
00:05:27,440 --> 00:05:28,250
That's a good clue.

83
00:05:28,280 --> 00:05:31,790
So now let's go ahead and try and address that first issue.

84
00:05:31,790 --> 00:05:35,690
If we go back, first issue is going to be the form doesn't let me submit and always shows please our

85
00:05:35,960 --> 00:05:36,190
right.

86
00:05:36,470 --> 00:05:37,490
So what?

87
00:05:37,520 --> 00:05:40,460
So the first thing I want to think about is what's actually happening here.

88
00:05:40,460 --> 00:05:44,540
Right when I'm clicking the submit button, that's that's really the first thing that happens.

89
00:05:44,540 --> 00:05:44,760
Right.

90
00:05:44,960 --> 00:05:49,530
So that is your first clue to try to research this component specifically.

91
00:05:49,850 --> 00:05:55,730
Now, it's not that difficult, you know, in this size app to find where the submit button is.

92
00:05:55,970 --> 00:06:02,600
So to do that, usually you can just control F and then search for submit and you'll see that button

93
00:06:02,600 --> 00:06:03,480
shows up right here.

94
00:06:03,830 --> 00:06:07,100
So and then you can also see that there's a function called simit.

95
00:06:07,340 --> 00:06:13,530
So there's a button here and then there's a function on click and then that goes up to here.

96
00:06:13,820 --> 00:06:15,850
So this is the callback for that.

97
00:06:16,220 --> 00:06:19,430
And this, as you could see, this just was here.

98
00:06:19,430 --> 00:06:20,090
I found this.

99
00:06:20,090 --> 00:06:24,170
I didn't have to look very far to find out the problem code.

100
00:06:24,170 --> 00:06:24,390
Right.

101
00:06:24,410 --> 00:06:25,550
So validate.

102
00:06:25,550 --> 00:06:27,620
So that's the first thing that gets called that.

103
00:06:27,620 --> 00:06:33,800
If I scroll up is a function that's up here and this is a function which sets fields.

104
00:06:33,800 --> 00:06:36,680
So sets fields is I highlight that.

105
00:06:36,680 --> 00:06:40,550
I can see that it's used up here as the used state.

106
00:06:40,550 --> 00:06:42,560
So it's setting the fields right.

107
00:06:42,570 --> 00:06:49,520
So I can guess that the fields are what I'm actually that, you know, is the data for these UI elements.

108
00:06:50,030 --> 00:06:53,780
And so I'm using a state of the field options.

109
00:06:53,780 --> 00:06:56,570
And you can remember we just looked at the field options.

110
00:06:56,900 --> 00:07:00,490
Those are being passed in as the initial state for fields.

111
00:07:01,040 --> 00:07:03,890
So that's kind of a run through of fields.

112
00:07:04,190 --> 00:07:08,120
Now, fields are then used here to reduce.

113
00:07:08,120 --> 00:07:09,860
So reduce right here.

114
00:07:10,280 --> 00:07:12,770
If you're not familiar with this, we can research that.

115
00:07:13,100 --> 00:07:19,850
But basically it just basically crunches down the object or merges all of the loops into one object,

116
00:07:19,850 --> 00:07:20,500
which is here.

117
00:07:20,510 --> 00:07:22,160
So it starts out as an empty object.

118
00:07:22,550 --> 00:07:25,010
And then you get the current field.

119
00:07:25,010 --> 00:07:25,740
That's the.

120
00:07:26,060 --> 00:07:28,160
So we're we're reducing all the fields down.

121
00:07:28,160 --> 00:07:29,870
That's what appears to be happening.

122
00:07:29,870 --> 00:07:30,130
Right.

123
00:07:31,100 --> 00:07:39,020
So because we know that the default field object is this, which looks like just JSON object, right.

124
00:07:39,020 --> 00:07:41,890
Or just a JavaScript, plain old JavaScript object.

125
00:07:41,900 --> 00:07:42,140
Right.

126
00:07:42,470 --> 00:07:43,790
This is the field.

127
00:07:43,790 --> 00:07:48,020
So this is going to be our main data model here for this UI component.

128
00:07:48,030 --> 00:07:54,260
So it's going to be just a string JSON object here with the keys being of the field keys.

129
00:07:54,260 --> 00:07:54,460
Right.

130
00:07:54,470 --> 00:07:57,030
So make the vehicle, make the model.

131
00:07:57,050 --> 00:07:58,910
These are keys inside of this object.

132
00:07:59,270 --> 00:08:06,860
So what is happening here is it's reducing down the fields into a new object that's setting on the app

133
00:08:06,860 --> 00:08:07,780
with Satterfield's.

134
00:08:07,820 --> 00:08:11,150
OK, so set fields' sets that new object.

135
00:08:11,150 --> 00:08:14,600
So you always want to make sure that you're keeping the objects the same.

136
00:08:15,440 --> 00:08:18,920
It's it's quite difficult to do this if you're not familiar.

137
00:08:18,920 --> 00:08:23,770
So I didn't have to do that because it's it's kind of challenging to reduce this down.

138
00:08:23,780 --> 00:08:26,750
It's not it's it's very difficult.

139
00:08:26,750 --> 00:08:36,500
So because you have to know about how to use the the spread operators correctly and do that dynamically

140
00:08:36,500 --> 00:08:36,920
as well.

141
00:08:36,930 --> 00:08:44,570
So if you're if you found this name of this key, you would we're setting the remerging, the current

142
00:08:44,570 --> 00:08:49,970
field object here with a new object or a new key override.

143
00:08:49,970 --> 00:08:53,120
So let's say that there was a make or vehicle make.

144
00:08:53,120 --> 00:08:58,490
Right this this would previously have a make up here, like the old make value.

145
00:08:58,760 --> 00:09:01,730
So and then here we are overwriting even that.

146
00:09:01,760 --> 00:09:02,960
So this is the current field.

147
00:09:02,960 --> 00:09:03,200
Right.

148
00:09:03,440 --> 00:09:09,740
And then we're just overriding that with a new key and value pairs, which are, well, just one key

149
00:09:09,770 --> 00:09:11,020
and values here.

150
00:09:11,360 --> 00:09:11,810
So.

151
00:09:13,090 --> 00:09:16,460
Attributes is the current value attribute.

152
00:09:16,490 --> 00:09:25,810
So this is another thing that's a bit confusing is object of entries creates a key value pair iterating

153
00:09:25,810 --> 00:09:27,190
over a group of arrays.

154
00:09:27,220 --> 00:09:29,770
So let me show you what that looks like in the console.

155
00:09:29,780 --> 00:09:36,070
So if we go here in the console, I can just type in I'm going to just kind of set a variable, let

156
00:09:36,070 --> 00:09:42,180
X equal A one, B to C three, OK?

157
00:09:42,400 --> 00:09:45,820
And then we could do object entries.

158
00:09:47,170 --> 00:09:47,740
Ex.

159
00:09:51,380 --> 00:09:55,970
All right, so I'm getting a reference error here, and I'm not sure why, so I'm just going to jump

160
00:09:55,970 --> 00:10:02,180
out into the actual app here, open up the Chrome console here, and then go to console here where I

161
00:10:02,180 --> 00:10:03,710
am sure that this will work.

162
00:10:03,710 --> 00:10:13,490
So const X equals A one B to C, three object entries X.

163
00:10:15,010 --> 00:10:22,330
As you could see, it's three arrays, so entries is going to give you an array back an array of arrays

164
00:10:22,360 --> 00:10:27,280
where each array is the key and the first element and the value in the second element.

165
00:10:27,820 --> 00:10:30,310
Think about this as a for loop for an object.

166
00:10:30,340 --> 00:10:30,730
Right.

167
00:10:31,030 --> 00:10:36,220
An object has a key and a value for each of the key value pairs there.

168
00:10:36,220 --> 00:10:38,590
And it's not easy to loop over the object.

169
00:10:38,590 --> 00:10:38,810
Right.

170
00:10:38,830 --> 00:10:45,250
You could do values, which gets the values of that object, object of values, and you could do object

171
00:10:45,250 --> 00:10:48,420
keys to get the keys of that object in an array.

172
00:10:48,460 --> 00:10:50,980
But what if you wanted to loop over both at the same time?

173
00:10:51,340 --> 00:10:52,790
That's where entries comes into play.

174
00:10:53,200 --> 00:10:57,040
Now, using those entries, we're going to destructor off of that.

175
00:10:57,050 --> 00:11:01,390
So I'm structuring I'm saying give me your name, give me your attributes.

176
00:11:01,390 --> 00:11:04,990
And this is just it could be anything I could put x y in here.

177
00:11:05,320 --> 00:11:11,140
The structuring works by just assigning that similar to react you state.

178
00:11:11,140 --> 00:11:11,410
Right.

179
00:11:11,590 --> 00:11:15,760
You're d structuring off of this you state thing that's returned, which is an array.

180
00:11:16,090 --> 00:11:18,070
You want just the first and second value.

181
00:11:18,280 --> 00:11:19,590
So you're naming the key.

182
00:11:19,600 --> 00:11:21,890
So that's the key name and then the attributes of that.

183
00:11:22,220 --> 00:11:30,370
So by this loop, what we're doing here, this loop here is looping over and giving us the key and values

184
00:11:30,370 --> 00:11:31,210
of the fields.

185
00:11:32,090 --> 00:11:37,520
Where the key, the field name and the field values or the field pairs of attributes for that field,

186
00:11:37,850 --> 00:11:43,480
so each field is going to be an object that looks like this, which has some information on it.

187
00:11:43,490 --> 00:11:43,750
Right.

188
00:11:43,760 --> 00:11:47,410
The label the for the form which gets set down there.

189
00:11:47,420 --> 00:11:53,690
So if we go down here, we could see we actually loop over those fields down here and we structure off

190
00:11:53,690 --> 00:11:53,980
of that.

191
00:11:53,990 --> 00:11:55,640
So similarly, we're going to do that again.

192
00:11:55,640 --> 00:12:00,410
We're going to do object entries down here and we're going to say, here's the key and here's the value.

193
00:12:02,860 --> 00:12:05,590
And then we Destructoid off of those actual attributes.

194
00:12:07,470 --> 00:12:15,360
So so that's that's sort of a very long winded way of explaining how this loop works, at the end of

195
00:12:15,360 --> 00:12:18,310
the day, we're just going to merge a new object into our fields.

196
00:12:18,340 --> 00:12:21,660
So what does that new object it's going to be for each key?

197
00:12:21,690 --> 00:12:23,160
We're just basically setting that error.

198
00:12:23,160 --> 00:12:23,460
Right.

199
00:12:23,700 --> 00:12:26,610
And it looks like we're always setting this error correct.

200
00:12:26,610 --> 00:12:30,750
Like we have an error and then we're always setting that and then we spread that over for that field.

201
00:12:30,970 --> 00:12:38,400
So that's how we turn this object into another object that has errors everywhere.

202
00:12:38,430 --> 00:12:44,640
OK, so if when I hit submit, you'll see errors go on every single field right now, what happens if

203
00:12:44,640 --> 00:12:46,400
I comment out this error here?

204
00:12:46,830 --> 00:12:51,090
So if I comment this out and I go ahead and go back and refresh.

205
00:12:54,150 --> 00:12:55,260
You'll see now.

206
00:12:56,570 --> 00:12:57,800
As I hit submit.

207
00:12:58,870 --> 00:13:01,180
Nothing happens, so there's no errors.

208
00:13:01,210 --> 00:13:02,180
Everything is the same.

209
00:13:02,470 --> 00:13:04,890
So this is how we set the error every time.

210
00:13:05,200 --> 00:13:09,340
So what the objective here was for you to do was to actually.

211
00:13:10,310 --> 00:13:16,400
Only throw this error when appropriate, and what you could do is you could take those current attributes

212
00:13:16,400 --> 00:13:23,240
for that field destruction structure, the value off which if you look and research about value, you

213
00:13:23,240 --> 00:13:25,400
know that each field has a value on it.

214
00:13:25,820 --> 00:13:31,850
And you wouldn't know that unless you read the on change handler and the change handler simply adds

215
00:13:31,850 --> 00:13:32,500
the value.

216
00:13:32,510 --> 00:13:38,360
So, you know, vet listeners, if you remember some of the other lectures, Iida, target value or

217
00:13:38,420 --> 00:13:41,090
destruction off of that, setting it on the fields.

218
00:13:41,330 --> 00:13:42,200
So each field.

219
00:13:43,360 --> 00:13:50,920
We're setting that value of that current field that we selected or we entered in text, so that's how

220
00:13:50,920 --> 00:13:51,880
we update the value.

221
00:13:52,120 --> 00:13:58,840
So what you could do here is just check if that value is there, right?

222
00:13:59,110 --> 00:14:00,120
Or if it's not there.

223
00:14:00,130 --> 00:14:03,520
So if there's no value, we're going to want to throw that error.

224
00:14:07,320 --> 00:14:08,460
So let's see if that worked.

225
00:14:08,640 --> 00:14:12,990
I'm going to type some text in here and then I'm going to type some text in here and then I'm going

226
00:14:12,990 --> 00:14:16,200
to submit and you could see attributes is not defined.

227
00:14:16,560 --> 00:14:20,820
So we actually can't do this because we need the attributes.

228
00:14:21,090 --> 00:14:22,680
We need the other attributes of that field.

229
00:14:23,280 --> 00:14:26,850
And I think you can actually structure the rest of them.

230
00:14:28,060 --> 00:14:30,970
Off of that, but we're going to keep it easy and we're just going to say.

231
00:14:33,300 --> 00:14:35,130
But we're just going to keep it easy and.

232
00:14:36,750 --> 00:14:42,390
We're going to change this back to attributes, but we're going to structure off of attributes here,

233
00:14:42,390 --> 00:14:48,360
so we're going to say Konsta value equals attributes like that, and then we're going to use the value

234
00:14:48,360 --> 00:14:48,940
the same way.

235
00:14:49,350 --> 00:14:51,390
So let's go back and change this.

236
00:14:54,390 --> 00:14:58,740
So now let's go ahead and look at this and see if this works.

237
00:15:00,650 --> 00:15:01,040
Great.

238
00:15:01,340 --> 00:15:07,670
So as you could see, it was that easy to just validate these fields by checking the value, so we checked

239
00:15:07,670 --> 00:15:12,750
the value and we only throw that error if there is a value or if there's no value.

240
00:15:12,920 --> 00:15:13,310
So.

241
00:15:14,200 --> 00:15:14,650
There you go.

242
00:15:14,680 --> 00:15:17,490
So that kind of fixes the first issue a bit, right?

243
00:15:18,130 --> 00:15:24,160
So we have to now move on to this part, which says make sure that all fields are required except for

244
00:15:24,160 --> 00:15:25,540
the condition which is optional.

245
00:15:25,960 --> 00:15:26,470
So.

246
00:15:27,850 --> 00:15:32,910
As you could see here, we have condition and this field should not be required.

247
00:15:32,920 --> 00:15:39,610
So if I type in this, I want to basically I want this this current state to be I don't want there to

248
00:15:39,610 --> 00:15:40,210
be an error here.

249
00:15:40,220 --> 00:15:44,080
I want this to not throw an error when despite of there being a value or not.

250
00:15:44,320 --> 00:15:44,630
Right.

251
00:15:45,010 --> 00:15:50,500
So that means this code here would still throw if there was no value for condition.

252
00:15:50,740 --> 00:15:54,690
And because condition is not required, I can bypass this error.

253
00:15:54,940 --> 00:15:58,510
So we're going to just throw another attribute in here.

254
00:15:58,510 --> 00:16:04,270
As you can see, we already have required being true set here on this configuration.

255
00:16:04,510 --> 00:16:09,760
So we're going to go ahead and change required to be false on the condition we're still setting this

256
00:16:09,760 --> 00:16:12,430
error, regardless of whether it's required or not.

257
00:16:12,440 --> 00:16:18,970
And so all you have to do is just pull required off of the attributes and check that it is required.

258
00:16:18,970 --> 00:16:19,240
Right.

259
00:16:19,810 --> 00:16:21,100
And it's required.

260
00:16:23,130 --> 00:16:27,120
So this is only happening if there is a required attribute.

261
00:16:27,160 --> 00:16:27,530
OK.

262
00:16:28,970 --> 00:16:29,510
So.

263
00:16:31,940 --> 00:16:35,240
Now, let's see what happens when we try to type in some fields.

264
00:16:37,440 --> 00:16:41,100
So as you could see, the condition no longer throws a validation here.

265
00:16:43,200 --> 00:16:48,510
So moving on, I can just want to look at this area that that's happening here, and you could see it's

266
00:16:48,510 --> 00:16:51,600
changing in uncontrolled input of type text to be controlled.

267
00:16:51,810 --> 00:16:54,740
And we have a warning failed pop type.

268
00:16:55,410 --> 00:16:57,640
So this is just some information here.

269
00:16:57,810 --> 00:16:58,950
Looks like it's just warnings.

270
00:16:58,950 --> 00:17:00,780
It's not actually affecting our app.

271
00:17:00,780 --> 00:17:04,090
So we can address those at a later point going down.

272
00:17:04,680 --> 00:17:05,040
All right.

273
00:17:05,040 --> 00:17:12,030
So now it seems like we've completed this first thing except for the fact that it doesn't let me submit.

274
00:17:12,420 --> 00:17:16,040
So, OK, so now I just want to submit an actual valid form.

275
00:17:16,050 --> 00:17:18,230
So what I'm going to do is I'm going to type in these here.

276
00:17:18,540 --> 00:17:22,140
Remember, we didn't actually submit a valid form yet because we were always throwing errors.

277
00:17:22,140 --> 00:17:24,660
But now we should be in a good state where we should pass.

278
00:17:24,660 --> 00:17:28,350
This has error functionality here, right?

279
00:17:28,350 --> 00:17:33,690
Because you can see here on Submit, we are checking if there's errors and we've always had errors as

280
00:17:33,690 --> 00:17:34,010
of now.

281
00:17:34,020 --> 00:17:35,240
So let's go ahead and submit.

282
00:17:35,640 --> 00:17:37,890
And as you could see, we got rid of the errors.

283
00:17:37,890 --> 00:17:38,910
So that's a new thing.

284
00:17:39,150 --> 00:17:40,290
We got rid of errors.

285
00:17:40,290 --> 00:17:41,670
And what else do we do?

286
00:17:41,700 --> 00:17:44,370
We were no longer showing the errors and that's about it.

287
00:17:44,370 --> 00:17:44,880
That's all we did.

288
00:17:44,880 --> 00:17:45,960
We just got rid of the errors.

289
00:17:46,200 --> 00:17:49,320
So what you could see here is how did we do that?

290
00:17:49,320 --> 00:17:50,940
What did we do to get rid of the errors?

291
00:17:51,690 --> 00:17:56,790
Well, we got rid of the errors because when you call validate, it actually will set the error back

292
00:17:56,790 --> 00:17:57,300
to null.

293
00:17:57,540 --> 00:18:04,200
So if there is if the value is suddenly required, this error will then or there actually is a value

294
00:18:04,200 --> 00:18:04,470
in there.

295
00:18:04,470 --> 00:18:05,580
But there was an error on it.

296
00:18:05,580 --> 00:18:09,390
So let's clear this one out and I'll show you what I mean.

297
00:18:09,630 --> 00:18:11,670
There's an error on this attribute right now.

298
00:18:11,700 --> 00:18:11,970
Right.

299
00:18:12,270 --> 00:18:13,500
But this error doesn't go away.

300
00:18:13,500 --> 00:18:18,690
When I start typing, it goes away when I had submit because I went into this function and set the error

301
00:18:18,810 --> 00:18:19,650
back to null.

302
00:18:19,920 --> 00:18:21,000
That's really important to know.

303
00:18:21,010 --> 00:18:25,680
So you're realizing that we're we're kind of secretly setting this.

304
00:18:25,680 --> 00:18:30,930
We're in we're actually validating errors again and setting we're clearing the errors out effectively.

305
00:18:30,930 --> 00:18:31,170
Right.

306
00:18:31,180 --> 00:18:34,110
So when I hit submit, it's clearing the errors out.

307
00:18:34,110 --> 00:18:38,070
So that's not really what you would think of as a submission, though, right?

308
00:18:38,070 --> 00:18:43,110
We want to actually end up adding the records and clearing out these fields to add more records.

309
00:18:43,440 --> 00:18:43,890
So.

310
00:18:45,400 --> 00:18:50,110
That's sort of the state of where what this app is doing at this point in time.

311
00:18:52,090 --> 00:18:57,070
All right, so we're going to move on to the next one, which is if a field has a validation error,

312
00:18:57,070 --> 00:18:59,560
please remove the error after I start typing.

313
00:18:59,780 --> 00:19:06,400
So we just went over how setting the error to null gets rid of the error.

314
00:19:07,180 --> 00:19:09,000
We never actually talked about why that is, though.

315
00:19:09,580 --> 00:19:12,660
So if we go down here, we could see the error is put on the TextField.

316
00:19:12,910 --> 00:19:14,380
Now, what is the TextField?

317
00:19:14,500 --> 00:19:16,970
The TextField is a material UI component, right.

318
00:19:17,320 --> 00:19:22,960
So let's go ahead and search for that material UI TextField and we'll come to this page, which is the

319
00:19:22,960 --> 00:19:24,240
material UI Web site.

320
00:19:24,370 --> 00:19:29,230
And as you could see, we have, you know, all the components on the left and everything in the API

321
00:19:29,230 --> 00:19:31,850
section is going to give you all the props that you could use.

322
00:19:31,870 --> 00:19:37,210
So under the hood, what happens is this is composed of a bunch of other smaller elements.

323
00:19:37,210 --> 00:19:40,720
So it's an abstraction that combines a bunch of elements together.

324
00:19:41,110 --> 00:19:45,040
One of those elements just happens to be the form helper text.

325
00:19:45,430 --> 00:19:47,740
The formal vertex is the error, basically.

326
00:19:47,740 --> 00:19:48,820
So we go down here.

327
00:19:50,250 --> 00:19:55,410
The error is right here, if true, the label will be displayed in an error state.

328
00:19:56,190 --> 00:20:03,120
To go back, we could see that let's just set the air to true or whatever, we are actually setting

329
00:20:03,120 --> 00:20:05,170
the error incorrectly here.

330
00:20:05,580 --> 00:20:07,410
This is one of the validation errors that we get.

331
00:20:07,440 --> 00:20:08,870
So this is just something that we can fix.

332
00:20:08,880 --> 00:20:10,980
So it's it's being supplied.

333
00:20:11,830 --> 00:20:12,840
It's an invalid prop.

334
00:20:12,840 --> 00:20:17,670
So we're currently passing in that error, which in the case of a issue is a string.

335
00:20:17,880 --> 00:20:20,580
So the errors should actually be a true statement.

336
00:20:20,580 --> 00:20:23,700
So we can define the error as a string in our own app.

337
00:20:23,880 --> 00:20:29,070
But when we pass that into the third party library, we want to make sure we're abiding by their rules.

338
00:20:29,370 --> 00:20:35,280
So we're just going to say error, true or false, and now we're changing that to be a boolean now.

339
00:20:35,310 --> 00:20:40,470
So now let's see when we have a validation error, we're no longer getting those warnings right.

340
00:20:40,920 --> 00:20:43,170
So we just fixed that warning, which is cool.

341
00:20:43,500 --> 00:20:47,730
We're getting another excellent thing over here, which is OK, that's fine.

342
00:20:47,730 --> 00:20:52,290
We can we know that field isn't defined in this one part, and that's OK.

343
00:20:52,500 --> 00:20:57,600
OK, so something else that we didn't mention was that condition actually has an asterisk next to it.

344
00:20:57,870 --> 00:21:04,770
And the reason that is, is because we're actually setting every field and material uses TextField to

345
00:21:04,770 --> 00:21:05,570
be true.

346
00:21:05,940 --> 00:21:11,130
So instead of doing that, we're just going to actually d structure the required parameter here.

347
00:21:11,130 --> 00:21:21,750
So if we go back to material uses TextField API, you'll see that if I go down here to required, if

348
00:21:21,750 --> 00:21:26,980
true, this label will be displayed as required and the input element will be required.

349
00:21:27,240 --> 00:21:30,750
So basically it's going to set this asterisk here.

350
00:21:30,750 --> 00:21:37,470
So and I could show you that by putting this required here and then now the asterisk goes away.

351
00:21:38,310 --> 00:21:41,940
So that really completes the the condition part.

352
00:21:42,060 --> 00:21:45,840
But the part that we're trying to do right now is the Taiping.

353
00:21:45,840 --> 00:21:46,110
Right.

354
00:21:46,120 --> 00:21:48,880
So the typing needs to get rid of the validation errors.

355
00:21:48,900 --> 00:21:54,160
So as I'm typing, I should be able to get those errors to go away as I'm typing.

356
00:21:54,570 --> 00:21:57,330
Now we know that setting the error to null does that.

357
00:21:57,900 --> 00:22:05,330
But if I go to the update value function, this is where we are updating that value, if you remember.

358
00:22:05,340 --> 00:22:08,880
So we go up here and as you can see, this is the name of the field.

359
00:22:08,880 --> 00:22:09,120
Right.

360
00:22:09,120 --> 00:22:11,710
And then these are the attributes and this is where we set that value.

361
00:22:11,940 --> 00:22:15,940
So what we can do is we can just always set the error to to be null.

362
00:22:16,260 --> 00:22:20,880
So in that attribute, the error is going to be null when we update the value.

363
00:22:21,240 --> 00:22:22,380
Now, let's see if that worked.

364
00:22:24,930 --> 00:22:30,870
And it did so as I type, I'm getting rid of the error, setting the original, the errors going back

365
00:22:30,870 --> 00:22:39,210
into here and being set as a boolean in material wise TextField and the error property, we didn't read

366
00:22:39,210 --> 00:22:39,720
that yet.

367
00:22:39,870 --> 00:22:44,520
The error property over here, if true, the label will be displayed in an error state.

368
00:22:44,520 --> 00:22:46,030
So that's what that does.

369
00:22:46,050 --> 00:22:51,510
So we're learning a little bit about the library and were correctly making sure we're tracing that state

370
00:22:51,510 --> 00:22:56,800
down into our app and we're making sure that we set the proper things when we want to.

371
00:22:56,820 --> 00:23:04,440
So when we update the value by typing or change of any kind, that callback is being run with the current

372
00:23:04,440 --> 00:23:04,980
value.

373
00:23:05,340 --> 00:23:08,880
We're updating the current value, but we're also clearing the error of that field out.

374
00:23:12,610 --> 00:23:14,620
That completes part to.

375
00:23:16,980 --> 00:23:23,190
All right, so we are on part three now where after submitting, we want the vehicles to be listed in

376
00:23:23,190 --> 00:23:24,020
the table below.

377
00:23:24,570 --> 00:23:30,900
So if we go back down here to the table, you could see that we are already passing in the this object

378
00:23:30,900 --> 00:23:31,680
called vehicles.

379
00:23:32,040 --> 00:23:33,510
This array called vehicles.

380
00:23:33,510 --> 00:23:33,770
Right.

381
00:23:34,170 --> 00:23:37,890
So vehicles up here, we're initializing it to be an empty array.

382
00:23:38,580 --> 00:23:42,150
And then we have a setter called set vehicles, so.

383
00:23:43,350 --> 00:23:48,600
We're just going to first look and see where set vehicles is being called, if it is called and it looks

384
00:23:48,600 --> 00:23:49,290
like it is right.

385
00:23:50,240 --> 00:23:54,200
But there's only one problem we're not adding any of our fields on here, so that's the main issue with

386
00:23:54,200 --> 00:23:54,470
this.

387
00:23:54,770 --> 00:24:03,140
As I set out to submit a form, even though the validation passes, nothing happens because we're setting

388
00:24:03,140 --> 00:24:06,030
it to be the same thing as it already is, which is an empty array.

389
00:24:06,410 --> 00:24:08,140
So this is actually pretty simple.

390
00:24:08,150 --> 00:24:13,340
We're going to do is we're just going to create a new array around that with the spread operator around

391
00:24:13,340 --> 00:24:15,560
the current vehicles and the new vehicle.

392
00:24:15,560 --> 00:24:17,000
What's the new vehicle going to be?

393
00:24:17,240 --> 00:24:18,680
It's going to be fields.

394
00:24:19,070 --> 00:24:23,440
So fields exactly what we already have here, right here.

395
00:24:23,450 --> 00:24:27,970
So you could make sure to set a new object if you want to like this.

396
00:24:28,280 --> 00:24:34,070
So just to make sure if you want to only, you know, send certain data into the vehicles, you can

397
00:24:34,070 --> 00:24:34,520
do this.

398
00:24:35,180 --> 00:24:37,910
We're just going to spread this to make sure it's not the exact same object.

399
00:24:38,210 --> 00:24:39,380
But we're going to do this.

400
00:24:40,370 --> 00:24:45,850
And just like that, if we now submit, you could see we get a vehicle posted here.

401
00:24:46,310 --> 00:24:51,620
So now, as you could see here, I'm submitting and I get to go down here.

402
00:24:51,620 --> 00:24:55,120
We get this, which is two children with the same key.

403
00:24:55,760 --> 00:25:00,760
So another clue, and that's pretty much it, just a bunch of warnings with that same thing.

404
00:25:01,040 --> 00:25:02,240
So if we go up here.

405
00:25:03,170 --> 00:25:04,770
We're getting children with the same key.

406
00:25:05,510 --> 00:25:11,030
We'll look at that shortly if we go down here to this, you could see that.

407
00:25:12,600 --> 00:25:13,320
If we go up.

408
00:25:15,140 --> 00:25:15,730
We go up here.

409
00:25:15,750 --> 00:25:20,480
We'll stay on target with our issue, which is that we want to actually clear out this form.

410
00:25:20,490 --> 00:25:23,040
So I think at this point we've actually did do this part.

411
00:25:23,040 --> 00:25:25,840
We've submitted the vehicle by adding it onto the array.

412
00:25:26,310 --> 00:25:28,440
The next thing we need to do is clear the form.

413
00:25:28,440 --> 00:25:30,120
So clearing a form.

414
00:25:30,120 --> 00:25:30,840
So what does that mean?

415
00:25:30,870 --> 00:25:35,490
Well, if you know about Satterfield's at this point, you should know that that would mean clearing

416
00:25:35,490 --> 00:25:36,720
out those properties.

417
00:25:36,720 --> 00:25:36,970
Right.

418
00:25:36,990 --> 00:25:39,990
So clearing out that object would be one way of doing it.

419
00:25:39,990 --> 00:25:43,950
But an even easier way of doing it is to just do the initial thing that we're doing here.

420
00:25:44,190 --> 00:25:47,100
We're setting the state to be and spread.

421
00:25:47,100 --> 00:25:48,870
So a copy of this.

422
00:25:49,810 --> 00:25:55,300
Object here, which this is the default state, so we just want to reset to the default state, so I

423
00:25:55,300 --> 00:26:00,130
have to do is just set fields and we're just going to set that fields to be the field options.

424
00:26:01,030 --> 00:26:06,310
So to do that, we're simply just going to add a new line over here and we're going to say set fields

425
00:26:07,270 --> 00:26:14,350
like this and then we're just going to paste in the fields or field options like that.

426
00:26:18,430 --> 00:26:20,880
So now let's see if that works.

427
00:26:22,530 --> 00:26:29,070
That works, so it looks like when I when I submit now, if I correctly validate the fields.

428
00:26:30,510 --> 00:26:31,330
It clears them.

429
00:26:31,770 --> 00:26:37,020
So what we're actually said on those fields, it was the value and it was the.

430
00:26:38,510 --> 00:26:44,480
Right, so we set the value, we may have set the error at one point, but the point is we set the slate

431
00:26:44,480 --> 00:26:46,860
clean when we set it to this object.

432
00:26:47,690 --> 00:26:51,810
So with that, we are done with this one.

433
00:26:52,370 --> 00:26:54,110
Now, let's go on to the final one.

434
00:26:54,110 --> 00:26:58,820
When loading the form or after submitting, I want to focus the first TextField.

435
00:26:59,390 --> 00:27:01,130
So what does that mean?

436
00:27:01,580 --> 00:27:02,330
It means this.

437
00:27:02,330 --> 00:27:05,510
We want this state to be the automatic state when we reload the page.

438
00:27:05,850 --> 00:27:07,370
But how would you do that?

439
00:27:07,380 --> 00:27:08,540
You might be wondering, right?

440
00:27:09,080 --> 00:27:10,640
Do I have to force a click?

441
00:27:10,640 --> 00:27:12,740
Do I have to force a tab?

442
00:27:12,740 --> 00:27:14,570
Like what do I have to do to get this to happen?

443
00:27:14,600 --> 00:27:19,430
Well, you probably could do that where you click on this element using a DOM hack.

444
00:27:19,430 --> 00:27:26,150
But what's even easier is to just think about it in terms of what material you I have this functionality

445
00:27:26,150 --> 00:27:30,460
already so you could do is like search for focus on here, for example.

446
00:27:31,370 --> 00:27:32,360
That's one way of doing it.

447
00:27:32,780 --> 00:27:36,140
But the point is, we wanted this to just be the default state.

448
00:27:36,500 --> 00:27:38,990
So let's search for focus on here.

449
00:27:41,700 --> 00:27:45,930
And you'll see the first thing that comes up is autofocus, if true, the input element will be focused

450
00:27:45,930 --> 00:27:46,950
during the first mount.

451
00:27:46,980 --> 00:27:48,510
So that sounds like it could be it.

452
00:27:49,440 --> 00:27:52,110
So if we go here, that's all we have for focus.

453
00:27:52,110 --> 00:27:53,250
So let's try that.

454
00:27:53,250 --> 00:27:55,330
It's a boolean and it's default to be false.

455
00:27:55,770 --> 00:27:59,070
So if we just set it on here.

456
00:28:09,400 --> 00:28:13,720
So a focus is the last one, so you might be asking, well, what's happening there?

457
00:28:13,750 --> 00:28:15,880
Well, if you go up, see.

458
00:28:17,400 --> 00:28:22,050
So not that I have not that I know exactly what's going on in material wise library, but I can make

459
00:28:22,050 --> 00:28:26,640
the hunch that it's setting autofocus on every single field and only one can be focused at once.

460
00:28:26,850 --> 00:28:31,620
And so it ends up just focusing on the last one because it's saying, oh, focus me, focus me, focus

461
00:28:31,620 --> 00:28:32,920
me all the way down to the last one.

462
00:28:33,240 --> 00:28:40,690
So we want to only focus something here with the actual we only want to focus the vehicle make right.

463
00:28:41,070 --> 00:28:47,120
So what we can do is we can go into our object and set auto focus to be true.

464
00:28:48,060 --> 00:28:52,260
And then if we go here, all we have to do is d structure off of this.

465
00:28:54,090 --> 00:28:56,910
And then once again, we can just say autofocus.

466
00:28:58,060 --> 00:28:59,050
True, false.

467
00:29:01,650 --> 00:29:04,650
So now let's see what happens when we refresh the page.

468
00:29:06,600 --> 00:29:07,290
So there we go.

469
00:29:07,890 --> 00:29:15,870
So when we refresh the page automatically focuses that and now let's see what happens when we start

470
00:29:15,870 --> 00:29:22,350
typing and then we submit and it clears it and it focuses the first one again.

471
00:29:22,800 --> 00:29:29,580
So this was just a cool example that I did to just kind of get you familiar with material UI forms,

472
00:29:29,880 --> 00:29:35,880
tables, validation properties, researching APIs, tracking state.

473
00:29:35,880 --> 00:29:42,180
Right, doing doing some resetting of state, getting a little bit hairy in terms of, you know, some

474
00:29:42,180 --> 00:29:46,080
logical statements here and trying to understand this one.

475
00:29:46,110 --> 00:29:51,080
And so I hope this is a good example to get you started on building apps with material UI.

476
00:29:51,450 --> 00:29:55,230
So thanks and see you in the next one.
