1
00:00:00,730 --> 00:00:06,340
All right, so for this first challenge, I'm going to show you how to debug this issue now, as you

2
00:00:06,340 --> 00:00:08,320
can see here, we're typing in some text.

3
00:00:08,320 --> 00:00:13,300
We get this invalid password message and we type some we backspace and it goes away.

4
00:00:13,540 --> 00:00:17,540
So what can we do to figure out how to get the right password?

5
00:00:17,830 --> 00:00:22,570
Well, first thing we're going to do is we're going to want to find the code that's causing this issue.

6
00:00:22,570 --> 00:00:22,840
Right.

7
00:00:22,870 --> 00:00:26,680
So we want to find that code and we want to read that code so that we can understand what's going on

8
00:00:26,680 --> 00:00:30,540
in the browser and then after knowing that we can debug the issue.

9
00:00:30,820 --> 00:00:35,610
So the first thing we want to do is we're going to open up this chrome dev tools here.

10
00:00:35,860 --> 00:00:40,060
So this is going to be so useful throughout all of these challenges because we can read the code through

11
00:00:40,060 --> 00:00:40,330
this.

12
00:00:40,330 --> 00:00:44,570
We could put breakpoints and inspect certain data and all this is going to be super useful.

13
00:00:44,770 --> 00:00:49,120
So as you could see here, first we go into the console and we see not much.

14
00:00:49,120 --> 00:00:49,330
Right.

15
00:00:49,330 --> 00:00:52,510
We refresh the page again and we don't see much here in the console.

16
00:00:52,510 --> 00:00:56,880
So there's not going to be any errors here that are going to help us to find what's going on.

17
00:00:57,220 --> 00:01:03,070
But what we can do is we can go here and we could just try and find the files that are causing this

18
00:01:03,070 --> 00:01:03,430
issue.

19
00:01:03,430 --> 00:01:03,660
Right.

20
00:01:03,940 --> 00:01:09,160
Or that are preventing us from entering in to the app and see what's going on there.

21
00:01:09,430 --> 00:01:11,510
And now there's a lot of ways to do this.

22
00:01:11,510 --> 00:01:13,400
So I'm going to show you a couple different ways to do this.

23
00:01:13,720 --> 00:01:19,680
First, if you go to the more tools section here, if we go up here and we go here to the bottom.

24
00:01:19,690 --> 00:01:22,990
Now, if I do this, this is probably what you're seeing.

25
00:01:23,260 --> 00:01:26,470
So you see we have this console here right now.

26
00:01:26,470 --> 00:01:31,280
If you do control shift F, you can also go in here and find the search option.

27
00:01:31,780 --> 00:01:38,080
So now what this is doing is it allows us to search the files for certain text or elements or anything,

28
00:01:38,080 --> 00:01:41,380
write certain code that is going to appear in our app.

29
00:01:41,390 --> 00:01:44,910
So we have here some text that says, what's the password?

30
00:01:45,250 --> 00:01:46,330
So I'm going to use that.

31
00:01:46,330 --> 00:01:47,380
That's going to be my clue.

32
00:01:47,380 --> 00:01:50,470
So I'm going to search the code base for that text.

33
00:01:50,740 --> 00:01:54,300
So I say, what's the password question mark?

34
00:01:54,580 --> 00:01:55,510
And I hit enter.

35
00:01:56,640 --> 00:02:01,800
Now, this is going to bring up just like that, the files that have that code.

36
00:02:02,130 --> 00:02:07,080
So as you can see here, we have an app that James and we have an app that Jass with a source map.

37
00:02:07,350 --> 00:02:10,860
So if I click on the first one, this is going to be the minified code.

38
00:02:11,070 --> 00:02:15,300
So this isn't going to be super helpful to debug because it's minified code.

39
00:02:15,300 --> 00:02:21,180
But if we go here, we see that source map, we click on that and then now we could see we have the

40
00:02:21,330 --> 00:02:24,540
React JSA source map here to that code.

41
00:02:24,840 --> 00:02:27,630
And as you could see here we have what's the password right there?

42
00:02:27,810 --> 00:02:32,020
Now, if I go back, because you could see if I click on it, it it highlights that line for me.

43
00:02:32,250 --> 00:02:37,590
So that's really useful because it just drills down exactly into where that element is.

44
00:02:37,890 --> 00:02:43,320
Now, obviously, if you have some more vague text, like if I type in submit, maybe that'll show up

45
00:02:43,320 --> 00:02:44,430
in a bunch of other files.

46
00:02:44,430 --> 00:02:48,440
And this might not be exactly how to get that file or that element.

47
00:02:48,720 --> 00:02:53,040
So there's other things you can do, for example, in the react dev tools.

48
00:02:53,220 --> 00:02:57,570
If I go here to my reactive tools, which will show, we'll talk about more in detail.

49
00:02:57,870 --> 00:03:01,470
You could see here that we have an app element, we have an app component.

50
00:03:01,710 --> 00:03:02,820
So we click on that.

51
00:03:03,000 --> 00:03:07,740
And then what you could do, which is really cool, is you can actually see the source of that file.

52
00:03:07,740 --> 00:03:12,870
So you could see the source where that file's coming from or where that code is coming from, that component

53
00:03:12,870 --> 00:03:13,380
is rendered.

54
00:03:13,620 --> 00:03:17,910
And then if you go here to this view source for this element, you click on that and you could see just

55
00:03:17,910 --> 00:03:20,650
like that the exact component that's being rendered.

56
00:03:20,670 --> 00:03:22,550
So this is our app right here.

57
00:03:22,560 --> 00:03:28,350
So it allows you to see the elements, the react components on the page, and then it allows you to

58
00:03:28,350 --> 00:03:31,900
drill down into exactly where that component was being rendered here.

59
00:03:32,430 --> 00:03:33,490
So this is really cool.

60
00:03:33,510 --> 00:03:38,990
So that was how we were able to find where that issue is happening in our app.

61
00:03:39,360 --> 00:03:42,660
Now, let's actually go in and find why this issue is happening.

62
00:03:42,960 --> 00:03:46,830
So as you can see here, the issue happens really when we click submit.

63
00:03:46,830 --> 00:03:47,100
Right.

64
00:03:47,460 --> 00:03:50,880
So what I like to do is find the event handlers for that.

65
00:03:50,890 --> 00:03:53,370
So as you can see here, we have a submit button.

66
00:03:53,520 --> 00:03:55,140
It's pretty obvious, right, to submit.

67
00:03:55,440 --> 00:03:58,320
And then we have an on click here and that's a submit.

68
00:03:59,410 --> 00:04:05,140
So we say, well, what's simit, we could double click on that and it'll show us the function right

69
00:04:05,140 --> 00:04:05,350
here.

70
00:04:05,350 --> 00:04:09,300
So we double click on that text and it's going to highlight that up for us right here.

71
00:04:09,640 --> 00:04:11,680
You can also search for submit if we want to.

72
00:04:11,680 --> 00:04:17,690
We could search for submit and enter a few times and then that'll show us where that is defined.

73
00:04:18,100 --> 00:04:23,300
Now, if we click or we go up here, we could see this is where the submit function is defined.

74
00:04:23,710 --> 00:04:28,660
So now what we're going to do is we're going to actually start to debug more into this function.

75
00:04:28,660 --> 00:04:32,050
So we have this kind of function here that's going to this is going to be our focal point.

76
00:04:32,050 --> 00:04:32,330
Right.

77
00:04:32,650 --> 00:04:37,390
So as you can see here, we have that invalid password message.

78
00:04:37,420 --> 00:04:37,740
Right.

79
00:04:37,760 --> 00:04:38,890
So we were reading this.

80
00:04:38,890 --> 00:04:44,800
We see it looks like there's some kind of comparison for the password and then we have a error that's

81
00:04:44,800 --> 00:04:45,340
being set.

82
00:04:46,470 --> 00:04:53,310
And then we have a wind condition after that, so we've read the submit function, we're understanding

83
00:04:53,310 --> 00:04:57,000
what's going on, but that doesn't really help us to figure out how to get past it.

84
00:04:57,000 --> 00:04:59,960
Right, because we have this secret password right here.

85
00:05:00,300 --> 00:05:03,560
So in order to figure this out, what we can do is we can.

86
00:05:03,810 --> 00:05:05,670
So now we have this here.

87
00:05:05,670 --> 00:05:10,320
Once you read this line, you should be able to if you've gotten this far, hopefully you were able

88
00:05:10,320 --> 00:05:11,970
to figure out what to do from here.

89
00:05:12,210 --> 00:05:14,190
If you haven't, there's a couple of ways we could do that.

90
00:05:14,190 --> 00:05:21,270
So, you know, you could read this, you could see, OK, this data is coming from data data just so

91
00:05:21,270 --> 00:05:23,970
we can find that file or what we could do is even quicker.

92
00:05:23,970 --> 00:05:28,230
We could just put a breakpoint here and then we can hit our submit button.

93
00:05:29,250 --> 00:05:34,350
And then just like that, we can hover over data and see what the secret password is, a secret password,

94
00:05:34,350 --> 00:05:35,370
says Coconut's.

95
00:05:35,760 --> 00:05:38,280
So that is the secret password.

96
00:05:38,490 --> 00:05:40,410
So we've debug this issue.

97
00:05:40,410 --> 00:05:43,760
Now, if we go here to password, you could see that we have no text in there.

98
00:05:43,770 --> 00:05:46,290
So this is a currently typed in string.

99
00:05:46,770 --> 00:05:47,970
And so there we go.

100
00:05:48,000 --> 00:05:50,580
So we we've read the expression here.

101
00:05:50,580 --> 00:05:56,910
We say if the password is not equal to the secret password, do this so it returns out of this function.

102
00:05:58,100 --> 00:06:04,110
Or else it will set the wind condition so based on this, I've been able to debug this issue, I can

103
00:06:04,200 --> 00:06:06,400
continue here to continue along on the code.

104
00:06:06,930 --> 00:06:08,340
Now I know what the password is.

105
00:06:08,340 --> 00:06:12,390
If I go and I type that password in and then I had simit.

106
00:06:13,360 --> 00:06:20,410
I win, so just like that, we were able to debug an issue, the future challenges will be doing more

107
00:06:20,440 --> 00:06:23,410
in terms of actually fixing code and writing code.

108
00:06:23,650 --> 00:06:28,340
But this is a fun challenge just to get you to start using the chrome dev tools and inspecting code.

109
00:06:28,870 --> 00:06:32,350
Now, what we're going to talk about more is our strategy guide here.

110
00:06:32,350 --> 00:06:37,150
So our strategy guide is going to help us to debug issues like this in the future.

111
00:06:37,360 --> 00:06:44,140
And as you could see, I did use this strategy guide quite frequently throughout this specific solution

112
00:06:44,140 --> 00:06:44,580
as well.

113
00:06:44,590 --> 00:06:47,940
So you could see I made sure I confirmed that issue.

114
00:06:48,340 --> 00:06:51,550
I gathered some clues about where that code was.

115
00:06:51,550 --> 00:06:53,080
So I found where the code was.

116
00:06:53,350 --> 00:07:00,130
And then I isolated what files and code are causing that issue, using the reactive tools as well as

117
00:07:00,130 --> 00:07:03,460
the search in the Chrome Dev Tools console.

118
00:07:04,180 --> 00:07:09,810
I did not see any error thrown, but I did inspect some DOM elements and I searched for some files.

119
00:07:09,820 --> 00:07:15,730
So we found that where it was happening and then we determined why it was happening by setting breakpoints

120
00:07:15,730 --> 00:07:16,710
and examining state.

121
00:07:17,200 --> 00:07:21,820
So like I said, we're going to be using this throughout the course and I hope that was helpful for

122
00:07:21,820 --> 00:07:22,890
our first challenge.

123
00:07:22,900 --> 00:07:26,020
So that's going to be it for this first challenge.

124
00:07:26,050 --> 00:07:26,440
Thanks.
