1
00:00:00.04 --> 00:00:02.06
- [Instructor] Let's take a
look at the server side data

2
00:00:02.06 --> 00:00:06.00
validation that we have
built in to our API.

3
00:00:06.00 --> 00:00:10.05
When you add in a request
parameter annotation, by default,

4
00:00:10.05 --> 00:00:15.04
the field required is set to true.

5
00:00:15.04 --> 00:00:19.01
That will add the validation
where that field is required

6
00:00:19.01 --> 00:00:21.08
to have a valued API call.

7
00:00:21.08 --> 00:00:25.03
Defining the type of
parameter will also ensure

8
00:00:25.03 --> 00:00:28.01
that the passed in data is valid.

9
00:00:28.01 --> 00:00:32.00
Let's demonstrate this
validation in Postman.

10
00:00:32.00 --> 00:00:35.06
If we remove the parameter checkout,

11
00:00:35.06 --> 00:00:42.00
and then try to execute the
get available rooms get call,

12
00:00:42.00 --> 00:00:46.09
we get a validation message,
checkout is not present.

13
00:00:46.09 --> 00:00:54.00
If we pass in an invalid
date, such as March 41,

14
00:00:54.00 --> 00:00:59.07
we get a type conversion
error and a 400 bad request.

15
00:00:59.07 --> 00:01:04.00
This validation will also
occur in the request body.

16
00:01:04.00 --> 00:01:09.09
If you look in ReservationRequest,
we expect an ID,

17
00:01:09.09 --> 00:01:14.04
a LocalDate checkin and
another LocalDate checkout.

18
00:01:14.04 --> 00:01:19.06
If we attempt to remove a
field, which is required,

19
00:01:19.06 --> 00:01:22.03
we will get a validation error.

20
00:01:22.03 --> 00:01:25.03
If you close that tab, click Don't Save,

21
00:01:25.03 --> 00:01:29.05
and then reopen, click on
Body, and then let's try

22
00:01:29.05 --> 00:01:32.01
passing in an invalid date.

23
00:01:32.01 --> 00:01:34.08
March 48th.

24
00:01:34.08 --> 00:01:38.08
In that case we also
get a validation error.

25
00:01:38.08 --> 00:01:41.01
And a 400 Bad Request.

26
00:01:41.01 --> 00:01:46.01
If you pass in a bad URL,
you just get a 404 Not Found.

27
00:01:46.01 --> 00:01:49.06
Our API returns preview
scripted error messages.

28
00:01:49.06 --> 00:01:53.01
They should give the user
enough info to fix their request

29
00:01:53.01 --> 00:01:54.09
if they get an error.

