1
00:00:00.06 --> 00:00:02.05
- [Instructor] We will
be building a application

2
00:00:02.05 --> 00:00:04.08
for the fictional Landon Hotel.

3
00:00:04.08 --> 00:00:07.07
An example resource will allow users

4
00:00:07.07 --> 00:00:09.07
to view available rooms,

5
00:00:09.07 --> 00:00:13.04
create, update, and delete a reservation.

6
00:00:13.04 --> 00:00:15.09
Let's go over resource modeling.

7
00:00:15.09 --> 00:00:19.06
A RESTful system is composed of resources.

8
00:00:19.06 --> 00:00:23.03
A resource is anything that has a URI.

9
00:00:23.03 --> 00:00:26.02
Examples of resources in the room domain

10
00:00:26.02 --> 00:00:30.08
are reservation, amenity,
and service requests.

11
00:00:30.08 --> 00:00:36.05
You can create, update,
retrieve or delete a resource.

12
00:00:36.05 --> 00:00:40.01
These actions are mapped to the HTTP verbs

13
00:00:40.01 --> 00:00:43.03
POST, PUT, GET, and DELETE.

14
00:00:43.03 --> 00:00:46.03
Resources are grouped into domains.

15
00:00:46.03 --> 00:00:50.03
A domain is a cohesive set of resources.

16
00:00:50.03 --> 00:00:53.03
An example of a domain is a room.

17
00:00:53.03 --> 00:00:57.02
In the room domain, you
will have resources such as

18
00:00:57.02 --> 00:01:02.03
Room Reservation, Amenities,
and Service Request.

19
00:01:02.03 --> 00:01:05.04
We will want to identify the
proper domain and resource

20
00:01:05.04 --> 00:01:09.09
to be used in a URI for our endpoints.

21
00:01:09.09 --> 00:01:12.09
An API endpoint will be in the format

22
00:01:12.09 --> 00:01:17.04
slash, domain, slash,
resource, slash, version.

23
00:01:17.04 --> 00:01:20.00
For example, at the Landon Hotel

24
00:01:20.00 --> 00:01:22.05
we will have a domain called room.

25
00:01:22.05 --> 00:01:24.06
You can check for available rooms

26
00:01:24.06 --> 00:01:28.00
and create a reservation for a room.

27
00:01:28.00 --> 00:01:30.06
Getting a list of available rooms

28
00:01:30.06 --> 00:01:32.07
would return a collection.

29
00:01:32.07 --> 00:01:35.02
Getting a single resource by ID

30
00:01:35.02 --> 00:01:37.09
would retun a singleton.

31
00:01:37.09 --> 00:01:39.06
Versioning allows you to handle

32
00:01:39.06 --> 00:01:42.00
different versions of a resource.

33
00:01:42.00 --> 00:01:45.09
When booking a reservation,
the complete URI

34
00:01:45.09 --> 00:01:52.00
would be POST, slash, room,
slash, reservations, slash, v1.

35
00:01:52.00 --> 00:01:54.02
You will also need to include

36
00:01:54.02 --> 00:01:57.02
the required headers and request body.

37
00:01:57.02 --> 00:02:00.01
The POST will be in JSON format.

38
00:02:00.01 --> 00:02:02.02
You will need to include the ID

39
00:02:02.02 --> 00:02:04.03
of the resource being reserved,

40
00:02:04.03 --> 00:02:05.09
in this case, the room.

41
00:02:05.09 --> 00:02:08.00
You will also need to include

42
00:02:08.00 --> 00:02:11.01
the check-in date and the check-out date.

