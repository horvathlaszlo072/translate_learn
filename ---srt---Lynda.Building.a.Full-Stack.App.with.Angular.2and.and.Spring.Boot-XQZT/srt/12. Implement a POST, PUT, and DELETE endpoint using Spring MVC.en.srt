1
00:00:01.00 --> 00:00:02.04
- [Instructor] Okay, now let's build out

2
00:00:02.04 --> 00:00:04.01
the remaining endpoints.

3
00:00:04.01 --> 00:00:06.01
First, let's add a post endpoint.

4
00:00:06.01 --> 00:00:08.05
Post is a HTTP verb that is used

5
00:00:08.05 --> 00:00:11.05
to create a new resource.

6
00:00:11.05 --> 00:00:14.08
Let's open the class
called reservation resource

7
00:00:14.08 --> 00:00:16.08
and add a method which will allow us

8
00:00:16.08 --> 00:00:18.06
to reserve a room.

9
00:00:18.06 --> 00:00:20.02
Let's add a public method

10
00:00:20.02 --> 00:00:21.08
called create reservation

11
00:00:21.08 --> 00:00:23.08
that returns a response entity

12
00:00:23.08 --> 00:00:27.00
that contains an empty
reservation response

13
00:00:27.00 --> 00:00:30.08
and a 201-created status quote.

14
00:00:30.08 --> 00:00:34.02
Create reservation will
take in a parameter

15
00:00:34.02 --> 00:00:39.01
called reservation request,
which is a request body.

16
00:00:39.01 --> 00:00:41.09
Next, let's add a request body annotation

17
00:00:41.09 --> 00:00:44.00
to that parameter.

18
00:00:44.00 --> 00:00:47.02
Let's import that annotation.

19
00:00:47.02 --> 00:00:52.00
Next, let's add a request
mapping annotation to the method.

20
00:00:52.00 --> 00:00:53.06
Let's add in four fields,

21
00:00:53.06 --> 00:00:57.06
path, method, produces, and consumes.

22
00:00:57.06 --> 00:01:00.04
Let's set path to an empty string.

23
00:01:00.04 --> 00:01:04.06
Next, let's set method to post.

24
00:01:04.06 --> 00:01:12.08
Let's set produces to
application JSON UTF8 value.

25
00:01:12.08 --> 00:01:14.08
Finally, let's set consumes

26
00:01:14.08 --> 00:01:20.02
to application JSON UTF8 value.

27
00:01:20.02 --> 00:01:25.01
Next, let's make sure the
method returns a response entity

28
00:01:25.01 --> 00:01:28.07
containing that empty reservation response

29
00:01:28.07 --> 00:01:31.06
and the status code created.

30
00:01:31.06 --> 00:01:34.08
Next, we need to create
the reservation request.

31
00:01:34.08 --> 00:01:37.01
Reservation request is a class

32
00:01:37.01 --> 00:01:39.04
which will represent the request body

33
00:01:39.04 --> 00:01:42.00
which is sent during a post.

34
00:01:42.00 --> 00:01:45.07
First, let's create a new
package called request in model.

35
00:01:45.07 --> 00:01:47.08
Let's right click on the model package

36
00:01:47.08 --> 00:01:50.08
and add a new package called request.

37
00:01:50.08 --> 00:01:53.01
Within request, let's create a class

38
00:01:53.01 --> 00:01:56.02
called reservation request.

39
00:01:56.02 --> 00:02:00.01
Let's add three class
members to this request,

40
00:02:00.01 --> 00:02:03.08
id, date start, and date end.

41
00:02:03.08 --> 00:02:06.04
Id is a private long.

42
00:02:06.04 --> 00:02:10.01
Check in is a private local date.

43
00:02:10.01 --> 00:02:13.08
Check out is also private local date.

44
00:02:13.08 --> 00:02:15.09
Let's import local date,

45
00:02:15.09 --> 00:02:20.00
then let's add a date time
format annotation to check in.

46
00:02:20.00 --> 00:02:23.02
Let's import that annotation,

47
00:02:23.02 --> 00:02:26.00
and then pass in a field called iso,

48
00:02:26.00 --> 00:02:28.05
with a value iso date.

49
00:02:28.05 --> 00:02:31.08
Now let's add that same
date time annotation format

50
00:02:31.08 --> 00:02:33.04
to check out.

51
00:02:33.04 --> 00:02:35.04
Next, let's use a keyboard shortcut,

52
00:02:35.04 --> 00:02:39.04
Command + Alt + S to
open up the source menu.

53
00:02:39.04 --> 00:02:42.02
Let's click Generate Getters and Setters,

54
00:02:42.02 --> 00:02:45.07
click on Select All, and OK.

55
00:02:45.07 --> 00:02:48.02
Next, let's create a constructor.

56
00:02:48.02 --> 00:02:50.02
Open up the source menu,

57
00:02:50.02 --> 00:02:52.04
and click Generate Constructor.

58
00:02:52.04 --> 00:02:55.04
Select all the fields, and click OK.

59
00:02:55.04 --> 00:02:59.01
Next, let's also create a
parameter list constructor.

60
00:02:59.01 --> 00:03:03.01
Open up source, generate a constructor,

61
00:03:03.01 --> 00:03:06.06
click Deselect All, and OK.

62
00:03:06.06 --> 00:03:08.07
Let's clean up the spacing,

63
00:03:08.07 --> 00:03:10.07
and save our changes.

64
00:03:10.07 --> 00:03:14.06
Next, let's go back into
reservation resource.

65
00:03:14.06 --> 00:03:17.05
Let's import the reservation request class

66
00:03:17.05 --> 00:03:19.03
we just created.

67
00:03:19.03 --> 00:03:21.04
Now, let's save our changes.

68
00:03:21.04 --> 00:03:24.05
Now, let's jump back in
to the api config class,

69
00:03:24.05 --> 00:03:27.02
and update the object mapper

70
00:03:27.02 --> 00:03:31.00
so that is able to parse
iso-formatted dates.

71
00:03:31.00 --> 00:03:36.01
First, let's create a new object mapper.

72
00:03:36.01 --> 00:03:38.04
Next, let's register a module

73
00:03:38.04 --> 00:03:43.03
with that object mapper
called JavaTimeModule.

74
00:03:43.03 --> 00:03:46.01
Then, let's import JavaTimeModule.

75
00:03:46.01 --> 00:03:48.05
Okay, let's save our changes.

76
00:03:48.05 --> 00:03:51.08
Now, we should be all
set to test the endpoint.

77
00:03:51.08 --> 00:03:53.09
Let's go back to Postman,

78
00:03:53.09 --> 00:03:55.08
and add our post endpoint.

79
00:03:55.08 --> 00:03:57.05
Click on your existing

80
00:03:57.05 --> 00:04:00.05
get available room reservations endpoint,

81
00:04:00.05 --> 00:04:03.08
click on the dropdown
by Save, click Save As,

82
00:04:03.08 --> 00:04:09.09
then rename the request,
create room reservation.

83
00:04:09.09 --> 00:04:13.05
Click on the endpoint
create room reservation,

84
00:04:13.05 --> 00:04:16.05
and then let's change the method to post.

85
00:04:16.05 --> 00:04:20.08
Next, let's remove the check
in and check out parameter.

86
00:04:20.08 --> 00:04:23.06
Then, click on the Body tab.

87
00:04:23.06 --> 00:04:27.06
Click raw, then click JSON.

88
00:04:27.06 --> 00:04:30.02
We want to create a JSON string

89
00:04:30.02 --> 00:04:34.02
that will represent a reservation request.

90
00:04:34.02 --> 00:04:37.02
Let's add a field id,

91
00:04:37.02 --> 00:04:40.06
and then we can set it
to an arbitrary value.

92
00:04:40.06 --> 00:04:42.08
Next, let's add a check in field,

93
00:04:42.08 --> 00:04:46.05
and set it to an iso-formatted date.

94
00:04:46.05 --> 00:04:49.02
Next, let's add a check out field,

95
00:04:49.02 --> 00:04:52.04
and also set it to an iso-formatted date.

96
00:04:52.04 --> 00:04:55.03
Okay, let's Save the request,

97
00:04:55.03 --> 00:04:58.03
and then let's go back to Eclipse.

98
00:04:58.03 --> 00:05:01.01
Let's right-click on
the project directory,

99
00:05:01.01 --> 00:05:03.06
click Run As, Spring Boot App.

100
00:05:03.06 --> 00:05:05.08
Okay, after it starts up,

101
00:05:05.08 --> 00:05:07.09
let's head back to Postman,

102
00:05:07.09 --> 00:05:10.02
and submit that post request.

103
00:05:10.02 --> 00:05:13.08
We can see, we get a 201-created response

104
00:05:13.08 --> 00:05:17.02
and a empty reservation response.

105
00:05:17.02 --> 00:05:19.07
Let's head back to Eclipse,

106
00:05:19.07 --> 00:05:22.05
then open up reservation resource.

107
00:05:22.05 --> 00:05:25.02
Next up, let's add a put endpoint.

108
00:05:25.02 --> 00:05:28.01
Put is a HTTP verb that is used

109
00:05:28.01 --> 00:05:31.01
to update a existing resource.

110
00:05:31.01 --> 00:05:34.06
Our put endpoint will be
exactly like our post endpoint,

111
00:05:34.06 --> 00:05:38.00
except with a different request method.

112
00:05:38.00 --> 00:05:42.03
Let's add a new public method
called update reservation

113
00:05:42.03 --> 00:05:44.07
that returns a response entity

114
00:05:44.07 --> 00:05:48.04
that contains a empty reservation response

115
00:05:48.04 --> 00:05:51.05
in a 200-okay status code.

116
00:05:51.05 --> 00:05:55.01
Let's copy the method create reservation.

117
00:05:55.01 --> 00:05:58.09
Let's update the method
name to update reservation.

118
00:05:58.09 --> 00:06:02.03
Then, update the method to put.

119
00:06:02.03 --> 00:06:05.00
Next, let's change the status code

120
00:06:05.00 --> 00:06:09.06
from 201-created to 200-okay.

121
00:06:09.06 --> 00:06:15.01
Let's save, and then restart the server.

122
00:06:15.01 --> 00:06:19.04
Okay, once it's back up,
let's go back to Postman.

123
00:06:19.04 --> 00:06:23.01
Click on your post, click
on the dropdown by Save,

124
00:06:23.01 --> 00:06:26.09
click Save As, then
update the request name

125
00:06:26.09 --> 00:06:32.06
to Update room reservation, and Save.

126
00:06:32.06 --> 00:06:35.02
Click on the request you just created,

127
00:06:35.02 --> 00:06:37.02
update the method to put,

128
00:06:37.02 --> 00:06:40.01
save it, and then send.

129
00:06:40.01 --> 00:06:43.03
We should get back a 200-okay status

130
00:06:43.03 --> 00:06:47.00
and an empty reservation object.

131
00:06:47.00 --> 00:06:49.07
Finally, let's add a delete endpoint.

132
00:06:49.07 --> 00:06:52.07
Coming back to reservation
resource one more time,

133
00:06:52.07 --> 00:06:55.02
let's go ahead and add a new public method

134
00:06:55.02 --> 00:06:57.03
called delete reservation

135
00:06:57.03 --> 00:07:00.00
that returns a response entity

136
00:07:00.00 --> 00:07:05.09
that contains no body in a
204 no content status code.

137
00:07:05.09 --> 00:07:08.08
Next, let's add a reservation id

138
00:07:08.08 --> 00:07:11.08
of the type long, as a parameter.

139
00:07:11.08 --> 00:07:15.01
Let's add the type
annotation path variable.

140
00:07:15.01 --> 00:07:17.09
Let's import the annotation,

141
00:07:17.09 --> 00:07:22.00
then let's add a request mapping
annotation to the method.

142
00:07:22.00 --> 00:07:26.03
Let's add two fields, path and method.

143
00:07:26.03 --> 00:07:30.01
Let's set path to the reservation id,

144
00:07:30.01 --> 00:07:34.02
then let's set method to delete.

145
00:07:34.02 --> 00:07:38.04
Next, let's return a empty response entity

146
00:07:38.04 --> 00:07:42.00
with the status no content.

147
00:07:42.00 --> 00:07:43.08
Let's save our changes,

148
00:07:43.08 --> 00:07:46.07
and restart the server one more time.

149
00:07:46.07 --> 00:07:48.05
Okay, once we start back up,

150
00:07:48.05 --> 00:07:50.07
let's head back to Postman.

151
00:07:50.07 --> 00:07:53.03
Alright, let's click on our get,

152
00:07:53.03 --> 00:07:57.03
click on the dropdown by Save, Save As,

153
00:07:57.03 --> 00:08:00.01
then let's update the request name

154
00:08:00.01 --> 00:08:03.05
to Delete room reservation.

155
00:08:03.05 --> 00:08:06.07
Let's click on Delete room reservation

156
00:08:06.07 --> 00:08:09.09
and change the method to delete.

157
00:08:09.09 --> 00:08:14.02
Let's remove the check in
and check out parameters,

158
00:08:14.02 --> 00:08:17.01
and add a path variable.

159
00:08:17.01 --> 00:08:20.02
This variable will be
the id of the reservation

160
00:08:20.02 --> 00:08:21.07
which you want to delete.

161
00:08:21.07 --> 00:08:24.08
Okay, now let's test it out.

162
00:08:24.08 --> 00:08:27.07
Okay, we got a 204 no content

163
00:08:27.07 --> 00:08:29.07
and a empty body as a response.

