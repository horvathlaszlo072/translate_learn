0
00:00:00,940 --> 00:00:02,839
[Autogenerated] the OS module is a simple

1
00:00:02,839 --> 00:00:04,860
one. IT provides a number of operating

2
00:00:04,860 --> 00:00:08,269
system related utility methods. I wrote a

3
00:00:08,269 --> 00:00:10,500
few examples of these methods here under

4
00:00:10,500 --> 00:00:15,109
the six OS folder 10 SJs file. To use the

5
00:00:15,109 --> 00:00:17,839
OS module you require first like this,

6
00:00:17,839 --> 00:00:19,829
then the OS variable will have a few

7
00:00:19,829 --> 00:00:21,890
methods you can call. For example, you can

8
00:00:21,890 --> 00:00:24,269
read what the operating system platform as

9
00:00:24,269 --> 00:00:26,739
set during the compiling of node. Using

10
00:00:26,739 --> 00:00:29,100
this platform method, you can also read

11
00:00:29,100 --> 00:00:31,399
the architecture of the US CPU. Is IT 30

12
00:00:31,399 --> 00:00:34,859
to 64 arm or something else? You can read

13
00:00:34,859 --> 00:00:37,259
information about each logical CPU core

14
00:00:37,259 --> 00:00:39,570
with this CB used method. I'm just

15
00:00:39,570 --> 00:00:42,420
counting them here. You can read

16
00:00:42,420 --> 00:00:44,289
information about the environment like

17
00:00:44,289 --> 00:00:46,840
where is the current user home directory?

18
00:00:46,840 --> 00:00:48,859
And you can do operating system agnostic

19
00:00:48,859 --> 00:00:50,920
operations like, for example, creating a

20
00:00:50,920 --> 00:00:53,320
multi line string using the end of line

21
00:00:53,320 --> 00:00:55,539
character. Although this is really less

22
00:00:55,539 --> 00:00:57,399
important today because JavaScript itself

23
00:00:57,399 --> 00:00:59,170
has template strings that can have

24
00:00:59,170 --> 00:01:01,560
multiple lines, there are a few other

25
00:01:01,560 --> 00:01:03,920
handy methods for this OS module that are

26
00:01:03,920 --> 00:01:08,000
all well documented under the OS module documentation page

