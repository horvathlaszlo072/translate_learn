0
00:00:01,240 --> 00:00:02,569
[Autogenerated] you can create an object

1
00:00:02,569 --> 00:00:04,769
in JavaScript with a few different ways.

2
00:00:04,769 --> 00:00:06,349
But the most common way is to use an

3
00:00:06,349 --> 00:00:09,839
object literal. Here's an example of that.

4
00:00:09,839 --> 00:00:11,769
This is a lot easier than doing something

5
00:00:11,769 --> 00:00:14,740
like new object, which you can if you want

6
00:00:14,740 --> 00:00:17,440
to. Literal initiation is very common in

7
00:00:17,440 --> 00:00:19,660
JavaScript. We use it for objects, raise

8
00:00:19,660 --> 00:00:21,559
strings, numbers and even things like

9
00:00:21,559 --> 00:00:24,789
regular expressions. The object, literal

10
00:00:24,789 --> 00:00:27,030
syntax, supports a few modern goodies.

11
00:00:27,030 --> 00:00:29,160
Here's a simple example where this object

12
00:00:29,160 --> 00:00:32,119
defined to regular properties if you need

13
00:00:32,119 --> 00:00:33,649
to define a property that holds a

14
00:00:33,649 --> 00:00:36,420
function, you can use this shorter Syntex

15
00:00:36,420 --> 00:00:38,659
with object literal. Of course, if you

16
00:00:38,659 --> 00:00:40,630
need an error function, you can still use

17
00:00:40,630 --> 00:00:44,740
the regular property. Centex Modern Object

18
00:00:44,740 --> 00:00:48,229
Liberals also support dynamic properties

19
00:00:48,229 --> 00:00:50,490
using this Centex, which looks like an

20
00:00:50,490 --> 00:00:52,179
array literal. But don't confuse it with

21
00:00:52,179 --> 00:00:55,210
that. JavaScript will evaluate what's

22
00:00:55,210 --> 00:00:57,619
within the square brackets and make the

23
00:00:57,619 --> 00:01:01,679
result of that the new property name. So,

24
00:01:01,679 --> 00:01:04,870
assuming we have a variable named mystery

25
00:01:04,870 --> 00:01:08,450
defined before this object, and I'm gonna

26
00:01:08,450 --> 00:01:10,959
go ahead and copy this code into a new

27
00:01:10,959 --> 00:01:13,640
rebel session, and now here is your

28
00:01:13,640 --> 00:01:16,510
JavaScript interview question. What is

29
00:01:16,510 --> 00:01:20,769
object that mystery. It's undefined

30
00:01:20,769 --> 00:01:23,260
because this mystery property was defined

31
00:01:23,260 --> 00:01:26,480
with dynamic property. Centex, which means

32
00:01:26,480 --> 00:01:28,909
JavaScript, will evaluate the mystery

33
00:01:28,909 --> 00:01:30,719
expression first on whatever that

34
00:01:30,719 --> 00:01:32,730
expression. Evaluated, too, will become

35
00:01:32,730 --> 00:01:36,620
the object property. In this case, the

36
00:01:36,620 --> 00:01:40,140
object will have a property answer with

37
00:01:40,140 --> 00:01:44,920
the value of 42. Another widely popular

38
00:01:44,920 --> 00:01:47,409
feature about object liberals is available

39
00:01:47,409 --> 00:01:49,790
to you when you need to define an object

40
00:01:49,790 --> 00:01:52,700
with property names to map values that

41
00:01:52,700 --> 00:01:55,569
exist in the current scope with the exact

42
00:01:55,569 --> 00:01:58,519
same names. If you have a variable named

43
00:01:58,519 --> 00:02:00,969
pie and you would like O B G to have a

44
00:02:00,969 --> 00:02:03,620
property named pious well holding the same

45
00:02:03,620 --> 00:02:06,620
value as the variable pie instead of

46
00:02:06,620 --> 00:02:09,729
typing the name twice like this, you can

47
00:02:09,729 --> 00:02:12,349
use the shorter Centex by admitting the

48
00:02:12,349 --> 00:02:15,009
second part in this shorter Centex is

49
00:02:15,009 --> 00:02:18,150
equivalent to what I had before. Objects

50
00:02:18,150 --> 00:02:20,210
are very popular in JavaScript. They are

51
00:02:20,210 --> 00:02:22,740
used to manage and communicate data, and

52
00:02:22,740 --> 00:02:27,000
using these features will make the code a bit shorter and easier to read.

