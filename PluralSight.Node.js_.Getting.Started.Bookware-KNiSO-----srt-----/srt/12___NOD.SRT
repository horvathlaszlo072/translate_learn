0
00:00:01,240 --> 00:00:03,160
[Autogenerated] so far. We used the note

1
00:00:03,160 --> 00:00:05,940
command in two modes. To start a ripple

2
00:00:05,940 --> 00:00:07,839
with no arguments and to execute the

3
00:00:07,839 --> 00:00:09,730
script by using a single file path

4
00:00:09,730 --> 00:00:12,990
argument. The Note command, which is often

5
00:00:12,990 --> 00:00:15,910
called the CLI, also has options which

6
00:00:15,910 --> 00:00:18,170
make it work differently. For example, the

7
00:00:18,170 --> 00:00:20,629
desk V option makes it up with the version

8
00:00:20,629 --> 00:00:23,829
of the note runtime and the DASH. P Option

9
00:00:23,829 --> 00:00:25,910
makes IT execute a string and print out

10
00:00:25,910 --> 00:00:28,789
its result, which I find super useful. For

11
00:00:28,789 --> 00:00:30,940
example, if I want to see how Maney CP use

12
00:00:30,940 --> 00:00:33,299
this machine has, I can use a call to the

13
00:00:33,299 --> 00:00:35,990
built in OS module, which has a function

14
00:00:35,990 --> 00:00:40,280
called CP Use and I can do dot lengthen

15
00:00:40,280 --> 00:00:42,420
that to see the size of the returned

16
00:00:42,420 --> 00:00:46,359
array. Similarly, here's another one liner

17
00:00:46,359 --> 00:00:48,719
to see the version of the V eight used in

18
00:00:48,719 --> 00:00:51,600
the current node installation. There are

19
00:00:51,600 --> 00:00:53,600
many other options. You can see a full

20
00:00:53,600 --> 00:00:56,880
list by using the dash H option. This

21
00:00:56,880 --> 00:00:59,810
could be a big list so you can pipe IT on

22
00:00:59,810 --> 00:01:02,780
the less command or its windows equivalent

23
00:01:02,780 --> 00:01:05,640
to Pagine ate your way through this list.

24
00:01:05,640 --> 00:01:07,150
Take a look at these options and

25
00:01:07,150 --> 00:01:09,109
familiarize yourself with them. Don't

26
00:01:09,109 --> 00:01:11,040
memorize anything except for the handy

27
00:01:11,040 --> 00:01:13,530
dash p one. But just be aware of all the

28
00:01:13,530 --> 00:01:16,730
things that you can do with this CLI. One

29
00:01:16,730 --> 00:01:19,469
of these options also opens the door to

30
00:01:19,469 --> 00:01:21,459
the options of V eight itself. Let's

31
00:01:21,459 --> 00:01:24,939
explore that list using node dash Dash V

32
00:01:24,939 --> 00:01:27,810
eight Dash options Pipe that on less as

33
00:01:27,810 --> 00:01:31,349
well. Node will report all the V eight

34
00:01:31,349 --> 00:01:33,439
options that it supports. These options

35
00:01:33,439 --> 00:01:35,909
get past to-be eight, for example, to make

36
00:01:35,909 --> 00:01:37,849
V eight. Always execute your job, script

37
00:01:37,849 --> 00:01:39,939
and strict mode. You can pass the dash

38
00:01:39,939 --> 00:01:42,920
dash. Use strict option. I wish this one

39
00:01:42,920 --> 00:01:44,719
had a default value of true but

40
00:01:44,719 --> 00:01:47,079
unfortunately, does not. The V eight

41
00:01:47,079 --> 00:01:49,120
options are a really big list, and it's

42
00:01:49,120 --> 00:01:51,359
mostly for advanced use. But let me tell

43
00:01:51,359 --> 00:01:53,859
you a few more things about it. You'll see

44
00:01:53,859 --> 00:01:55,329
some options that begin with the word

45
00:01:55,329 --> 00:01:58,180
harmony. These flags usually control the

46
00:01:58,180 --> 00:02:00,920
features that are still being tested. You

47
00:02:00,920 --> 00:02:03,170
can use them by including their flags, but

48
00:02:03,170 --> 00:02:06,540
just know that they are not final yet.

49
00:02:06,540 --> 00:02:09,680
You'll see many options for tracing. If

50
00:02:09,680 --> 00:02:11,469
you need V eight to give you more

51
00:02:11,469 --> 00:02:13,569
debugging power, you can make it up, Put

52
00:02:13,569 --> 00:02:16,810
more information. Some options control how

53
00:02:16,810 --> 00:02:18,939
v eight behaves and also control its

54
00:02:18,939 --> 00:02:21,280
limits. Other options will report

55
00:02:21,280 --> 00:02:23,500
information or give you control over

56
00:02:23,500 --> 00:02:26,840
what's usually not possible without them.

57
00:02:26,840 --> 00:02:28,789
Do a quick scan on this list, but usually

58
00:02:28,789 --> 00:02:31,050
if you think you might find helpful option

59
00:02:31,050 --> 00:02:34,169
here, you can grip this list to search for

60
00:02:34,169 --> 00:02:36,689
it. For example, you can grip for in

61
00:02:36,689 --> 00:02:39,629
progress to see all the in progress

62
00:02:39,629 --> 00:02:41,650
harmony flags for this particular note

63
00:02:41,650 --> 00:02:45,330
version. In addition to all these flags,

64
00:02:45,330 --> 00:02:48,500
the note CLI also supports some

65
00:02:48,500 --> 00:02:50,610
environment variables that you can use to

66
00:02:50,610 --> 00:02:53,080
change the process behavior. You can see

67
00:02:53,080 --> 00:02:55,939
this list at the end of the dash H output.

68
00:02:55,939 --> 00:02:58,659
For example, this node debug environment

69
00:02:58,659 --> 00:03:01,250
variable instructs core modules to print

70
00:03:01,250 --> 00:03:05,039
out any debug information they have. If we

71
00:03:05,039 --> 00:03:07,430
execute the Hello World script with no

72
00:03:07,430 --> 00:03:09,900
debug set to SD to-be, which is the core

73
00:03:09,900 --> 00:03:12,919
module used there, then on each incoming

74
00:03:12,919 --> 00:03:15,449
connection, that HDTV module will print

75
00:03:15,449 --> 00:03:19,000
out some debugging messages. Most node

76
00:03:19,000 --> 00:03:20,599
libraries, including the packages that

77
00:03:20,599 --> 00:03:23,409
you'd install on use support a note debug

78
00:03:23,409 --> 00:03:25,509
flag. You can give this environment

79
00:03:25,509 --> 00:03:27,469
variable. A comma separated list of the

80
00:03:27,469 --> 00:03:29,349
modules for which you want to enable

81
00:03:29,349 --> 00:03:32,310
debugging another hand. The environment

82
00:03:32,310 --> 00:03:34,750
variable is this note path. One by

83
00:03:34,750 --> 00:03:37,900
default. Node has certain paths. IT used

84
00:03:37,900 --> 00:03:39,680
to look up modules you require in your

85
00:03:39,680 --> 00:03:41,759
code, and you can use this environment

86
00:03:41,759 --> 00:03:44,490
variable to override that. These are the

87
00:03:44,490 --> 00:03:46,219
built in environment variables, but you

88
00:03:46,219 --> 00:03:48,500
can have your note process use any other

89
00:03:48,500 --> 00:04:04,000
environment variables as well. Let's talk about that next.

