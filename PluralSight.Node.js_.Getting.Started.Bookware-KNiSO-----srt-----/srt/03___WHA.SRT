0
00:00:00,640 --> 00:00:02,080
[Autogenerated] Okay, so you can probably

1
00:00:02,080 --> 00:00:04,419
answer this question, but this is a first

2
00:00:04,419 --> 00:00:06,639
step course in notes, so let me start at

3
00:00:06,639 --> 00:00:10,140
the very beginning. What is no just-as

4
00:00:10,140 --> 00:00:12,869
here is probably the simplest definition

5
00:00:12,869 --> 00:00:15,460
of note. It's JavaScript on your back end

6
00:00:15,460 --> 00:00:18,460
servers before note. That was not a common

7
00:00:18,460 --> 00:00:21,129
or easy thing to do. JavaScript was mainly

8
00:00:21,129 --> 00:00:24,070
a front end thing. This isn't really a

9
00:00:24,070 --> 00:00:26,100
complete definition, because note offers a

10
00:00:26,100 --> 00:00:28,070
lot more than executing JavaScript on the

11
00:00:28,070 --> 00:00:30,670
server. In fact, the execution off

12
00:00:30,670 --> 00:00:33,649
JavaScript on the server is not done by

13
00:00:33,649 --> 00:00:36,030
note at all. It's done with a virtual

14
00:00:36,030 --> 00:00:39,619
machine. PVM, like V eight or chakra note,

15
00:00:39,619 --> 00:00:42,179
is just the coordinator. It's the one who

16
00:00:42,179 --> 00:00:44,710
instructs the VM like V eight to execute

17
00:00:44,710 --> 00:00:48,240
your JavaScript so note is better defined

18
00:00:48,240 --> 00:00:51,340
as a wrapper around the VM like V eight.

19
00:00:51,340 --> 00:00:53,090
I'm going to use the term V eight in this

20
00:00:53,090 --> 00:00:55,149
course because that's the default VM in

21
00:00:55,149 --> 00:00:57,020
note. But you can totally run note with

22
00:00:57,020 --> 00:00:59,500
other VMS if you need to, so when you

23
00:00:59,500 --> 00:01:02,299
write JavaScript or note, note will pass

24
00:01:02,299 --> 00:01:05,000
your JavaScript to-be eight v eight will

25
00:01:05,000 --> 00:01:07,579
execute that JavaScript and tell note what

26
00:01:07,579 --> 00:01:09,579
the result is and note will make the

27
00:01:09,579 --> 00:01:11,689
results available to you. That's the

28
00:01:11,689 --> 00:01:13,819
simple story, but no, it is a bit more

29
00:01:13,819 --> 00:01:16,379
useful than just that. Besides, the fact

30
00:01:16,379 --> 00:01:18,409
that enables us to execute JavaScript on a

31
00:01:18,409 --> 00:01:20,260
server, which is done through a seamless

32
00:01:20,260 --> 00:01:22,810
integration with V eight Note comes with

33
00:01:22,810 --> 00:01:25,569
some handy built in modules providing rich

34
00:01:25,569 --> 00:01:28,260
features through easy to use asynchronous

35
00:01:28,260 --> 00:01:31,090
APIs in the next module. We'll talk about

36
00:01:31,090 --> 00:01:33,290
that and a few other reasons why

37
00:01:33,290 --> 00:01:35,900
developers are picking know just-as over

38
00:01:35,900 --> 00:01:40,000
many other options when it comes to creating servers on their back ends.

