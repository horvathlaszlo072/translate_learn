0
00:00:01,139 --> 00:00:02,879
[Autogenerated] if defining a variable on

1
00:00:02,879 --> 00:00:05,530
the top level scope in a note module does

2
00:00:05,530 --> 00:00:08,449
not make a global one. Is there a way to

3
00:00:08,449 --> 00:00:11,380
define a global value in node? The answer

4
00:00:11,380 --> 00:00:14,029
is yes, but you should really avoid doing

5
00:00:14,029 --> 00:00:17,839
that. The Onley Global variables in note,

6
00:00:17,839 --> 00:00:20,559
are the variables attached to this special

7
00:00:20,559 --> 00:00:23,489
global object. This global object is the

8
00:00:23,489 --> 00:00:25,449
equivalent to the window object in

9
00:00:25,449 --> 00:00:28,050
browsers, and it's the only global concept

10
00:00:28,050 --> 00:00:30,629
in note. If you inspect this global

11
00:00:30,629 --> 00:00:33,390
object, I'm using a dirty trick here to

12
00:00:33,390 --> 00:00:35,920
Onley. Show the top level properties on

13
00:00:35,920 --> 00:00:38,210
this object rather than inspecting it as a

14
00:00:38,210 --> 00:00:40,880
tree because it's a big one. If you

15
00:00:40,880 --> 00:00:43,759
execute this file. No, the one there that

16
00:00:43,759 --> 00:00:46,710
yes, you'll see a few things here on the

17
00:00:46,710 --> 00:00:48,560
global object. There is the process

18
00:00:48,560 --> 00:00:50,149
object, for example, and there are other

19
00:00:50,149 --> 00:00:52,689
features like buffers and timers. All of

20
00:00:52,689 --> 00:00:55,659
the's here are globally available in all

21
00:00:55,659 --> 00:00:58,299
node modules because they're attached to

22
00:00:58,299 --> 00:01:01,929
this special global object. So when you

23
00:01:01,929 --> 00:01:05,540
use as a time out call set time out,

24
00:01:05,540 --> 00:01:09,219
you're actually using global dot set time

25
00:01:09,219 --> 00:01:11,489
out. But because it's part of the global

26
00:01:11,489 --> 00:01:13,640
object, we can use it directly. We don't

27
00:01:13,640 --> 00:01:15,840
need to do global dot because that's the

28
00:01:15,840 --> 00:01:18,159
concept of the global object. In note,

29
00:01:18,159 --> 00:01:21,540
things will just be available globally.

30
00:01:21,540 --> 00:01:24,159
You can also attach new things to this

31
00:01:24,159 --> 00:01:26,939
global object yourself in the to set the

32
00:01:26,939 --> 00:01:29,200
Jets file here I have a simple example. I

33
00:01:29,200 --> 00:01:33,290
am doing global The answer Equal 42 making

34
00:01:33,290 --> 00:01:36,390
answer a new global value Now that you can

35
00:01:36,390 --> 00:01:40,239
access in any node module, here's how he

36
00:01:40,239 --> 00:01:43,099
contest that in the two tests suggest file

37
00:01:43,099 --> 00:01:45,590
here I am requiring the file that added

38
00:01:45,590 --> 00:01:48,069
the global value and then console logging.

39
00:01:48,069 --> 00:01:51,049
Answer directly, not as part of a napi I.

40
00:01:51,049 --> 00:01:54,739
And guess what? If we execute to test here

41
00:01:54,739 --> 00:01:56,959
because answer was set on the global

42
00:01:56,959 --> 00:01:59,469
object, you can access it from anywhere

43
00:01:59,469 --> 00:02:03,719
directly. Pretty cool, right? Wrong. Don't

44
00:02:03,719 --> 00:02:07,640
do that. Global values like this are bad.

45
00:02:07,640 --> 00:02:09,919
This is true here, and it's also true in

46
00:02:09,919 --> 00:02:12,120
the browser environment. You should not

47
00:02:12,120 --> 00:02:15,740
make your code depend on any global state.

48
00:02:15,740 --> 00:02:17,949
Just treat this global object as a built

49
00:02:17,949 --> 00:02:24,000
in thing that node itself uses, and you shouldn't do not attach anything to IT.

