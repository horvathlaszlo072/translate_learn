1
00:00:00,360 --> 00:00:01,350
Welcome back, everyone.

2
00:00:02,130 --> 00:00:08,370
And the last video, I challenge you to find a way to hide this car drop down based on clicking the

3
00:00:08,370 --> 00:00:09,120
car icon.

4
00:00:10,150 --> 00:00:16,090
The way we're going to do it is using another context, and here we're going to go into context and

5
00:00:16,090 --> 00:00:17,500
make a new file.

6
00:00:17,620 --> 00:00:20,410
Kartika Context Dot GSX.

7
00:00:21,520 --> 00:00:28,330
Inside, we need to import the create context as well as you state, because we know we need to store

8
00:00:28,360 --> 00:00:33,010
some kind of true false state of whether or not the card is open or not.

9
00:00:33,820 --> 00:00:39,700
As for the actual cart context, let's create a create context.

10
00:00:40,300 --> 00:00:44,800
And inside we want to make is cart open as the name.

11
00:00:45,220 --> 00:00:46,570
So by default, this will be false.

12
00:00:46,960 --> 00:00:53,740
And then, of course, we'll do a set is cart open, which is going to point to a function.

13
00:00:54,980 --> 00:00:58,700
Then what we want to do is we want to create the provider.

14
00:00:58,880 --> 00:01:06,410
So I'll say Carte Provider is equal to this function that we know will take the children because we've

15
00:01:06,410 --> 00:01:08,280
already done this pattern a couple of times now.

16
00:01:08,690 --> 00:01:10,880
And what we're returning is the cart.

17
00:01:12,120 --> 00:01:14,130
Context provider.

18
00:01:17,090 --> 00:01:19,550
And then inside, we render the children.

19
00:01:21,320 --> 00:01:25,130
So here what we have next is the actual you state.

20
00:01:26,030 --> 00:01:34,520
So we'll say is cart open and set is car open is equal to calling you state of false.

21
00:01:36,000 --> 00:01:45,900
As for the value we'll set this to, is cart open and the set is cart open setter function that we get

22
00:01:45,900 --> 00:01:49,440
from you state, and we pass this in as the value.

23
00:01:52,200 --> 00:01:53,940
So now we've got our provider.

24
00:01:54,860 --> 00:01:58,190
What we need to do is we need to wrap our application.

25
00:01:58,490 --> 00:02:03,500
So let's go to index chess and let's import in the correct provider.

26
00:02:07,180 --> 00:02:09,310
So let's think about our car context.

27
00:02:10,390 --> 00:02:12,910
Where most likely, should our contacts live?

28
00:02:13,510 --> 00:02:18,400
Is there a chance that our clerk context is going to need the user and the products?

29
00:02:19,090 --> 00:02:26,350
There is a very likely chance that we might use the user in order to query a database for a user's cart

30
00:02:26,350 --> 00:02:29,590
if we want to persist it in a third party database.

31
00:02:29,890 --> 00:02:35,620
That way, if a user logs in and they have some court session that they didn't finish with, we could

32
00:02:35,620 --> 00:02:36,460
pull it from that.

33
00:02:37,210 --> 00:02:41,850
So combine that with the fact that maybe the products we want to be able to access somehow in the car

34
00:02:41,860 --> 00:02:46,240
provider, we're not certain yet how, but it's a very high possibility because they're probably going

35
00:02:46,240 --> 00:02:48,160
to share some details between these products.

36
00:02:48,580 --> 00:02:52,780
It's most likely that we want to put the cart provider inside of the products provider provided the

37
00:02:52,780 --> 00:02:54,490
user provider, but still wrapping the app.

38
00:02:55,450 --> 00:02:58,600
So here now that we have our car provider.

39
00:02:59,900 --> 00:03:03,260
And we have the methods on our cart context.

40
00:03:03,650 --> 00:03:06,230
We want to start using them inside the navigation component.

41
00:03:07,320 --> 00:03:09,010
So we already have our use context.

42
00:03:09,030 --> 00:03:12,180
Let's just also bring in the cart context.

43
00:03:13,440 --> 00:03:19,290
And here, let's just make sure to update the relative path.

44
00:03:24,150 --> 00:03:25,380
And now let's bring in.

45
00:03:27,330 --> 00:03:28,440
From the context.

46
00:03:32,470 --> 00:03:34,300
Is car open?

47
00:03:34,540 --> 00:03:41,580
Well, not the car provider, sorry, the context I will say is car open, so let's copy that down.

48
00:03:42,160 --> 00:03:48,040
And what we want to do is we want to conditionally render the car drop down based on the truthiness

49
00:03:48,040 --> 00:03:49,000
of this value.

50
00:03:49,630 --> 00:03:53,530
So here what we can do is we can wrap is cart drop down.

51
00:03:55,180 --> 00:04:00,940
With is cart open and use this what's known as the short circuit operator.

52
00:04:01,270 --> 00:04:06,760
So double ampersand, essentially what happens is, as you know, it tries to evaluate the truthiness

53
00:04:06,760 --> 00:04:08,320
of this statement.

54
00:04:08,800 --> 00:04:15,280
So in order for a double Amberson to evaluate as true, both the left side and the right side must both

55
00:04:15,280 --> 00:04:17,320
evaluate to a truth value.

56
00:04:17,740 --> 00:04:22,210
Truthiness here with his card open, of course, is true or false because it's a Boolean.

57
00:04:22,810 --> 00:04:28,150
But on this side, cart drop down is going to be a component, meaning that it is a truly value.

58
00:04:28,150 --> 00:04:31,180
Components are all true with the values because they are functions.

59
00:04:31,870 --> 00:04:37,060
So here are essentially what this short circuit operator says that if this total thing evaluates to

60
00:04:37,060 --> 00:04:42,640
true, then what I'm going to return to you is going to be the last thing you gave me.

61
00:04:42,760 --> 00:04:43,900
So our car dropdown.

62
00:04:44,200 --> 00:04:48,460
So what happens is that it's going to evaluate the statement, see that there's a cart drop down.

63
00:04:48,460 --> 00:04:53,860
And if this total statement is true, meaning that is cart open to be true, return the sharp dropdown.

64
00:04:54,010 --> 00:04:56,890
If this is false, then it won't return anything.

65
00:04:56,920 --> 00:04:58,060
This will just exit.

66
00:04:58,960 --> 00:05:03,130
So now we've added in the logic to conditionally show our cart.

67
00:05:03,880 --> 00:05:07,240
What we need to do now, though, is inside of the cart icon.

68
00:05:07,240 --> 00:05:13,210
We need to figure out the actual triggering of setting the value to truth and false.

69
00:05:14,310 --> 00:05:20,550
So let's go into our cart icon component, and let's import in our use context hook.

70
00:05:25,140 --> 00:05:28,800
And we also need to import in the actual context itself.

71
00:05:29,250 --> 00:05:33,600
So I want to import in the cart context from.

72
00:05:35,780 --> 00:05:40,010
Let's go up to our correct corresponding contexts folder.

73
00:05:41,170 --> 00:05:49,090
And the cart context, and then what we're going to do is we are going to say that Konst set is.

74
00:05:50,300 --> 00:05:51,580
Cart open.

75
00:05:52,940 --> 00:05:56,510
Equal to use context and the car context.

76
00:05:57,460 --> 00:05:58,810
But is this all we need?

77
00:05:59,380 --> 00:06:03,610
Well, let's think about it here inside of this icon.

78
00:06:03,940 --> 00:06:09,280
What we want to happen is when you click it, if the car is not open, then open it.

79
00:06:09,880 --> 00:06:11,710
If it is open, then close it.

80
00:06:12,040 --> 00:06:17,080
So essentially, what we want to do is we want to inverse this is cart open option.

81
00:06:17,830 --> 00:06:24,520
So here what I actually want to do is I actually want to create a new function called toggle.

82
00:06:24,730 --> 00:06:27,760
I'm going to call it toggle is cart open.

83
00:06:28,390 --> 00:06:36,670
And what this function does is it calls the set is cart open method, but it sets it with the opposite

84
00:06:36,670 --> 00:06:37,210
values.

85
00:06:37,210 --> 00:06:40,930
So the inverse value of what currently is cart openness.

86
00:06:41,230 --> 00:06:44,410
And this is how you create what's known as a toggle.

87
00:06:45,190 --> 00:06:48,370
So here now we can add to our on click.

88
00:06:48,520 --> 00:06:50,110
Our toggle is cart open.

89
00:06:50,590 --> 00:06:53,770
So if I save this now and let's go back to our application.

90
00:06:55,610 --> 00:06:57,860
What do I see when I click this?

91
00:06:59,000 --> 00:06:59,540
There we go.

92
00:06:59,810 --> 00:07:06,180
We've added in this toggling ability and we can now hide and show the actual cards.

93
00:07:07,070 --> 00:07:08,300
So that's really good.

94
00:07:08,630 --> 00:07:13,610
We've got a lot of functionality and it's looking a lot closer now to the final application.

95
00:07:14,330 --> 00:07:20,930
Now what we need to do is actually do the most challenging portion, which is building in the actual

96
00:07:21,140 --> 00:07:24,530
items that we need to add into this section.

97
00:07:24,860 --> 00:07:29,390
But before we start doing that, what we want to do is we want to commit our code.

98
00:07:30,110 --> 00:07:32,060
So let's go back to our terminal.

99
00:07:32,480 --> 00:07:35,720
And what we'll do is we'll get add all of our changes.

100
00:07:36,260 --> 00:07:42,500
We'll get commit and we'll say we're adding cart context and our shopping icon.

101
00:07:43,690 --> 00:07:46,180
As well as carte down.

102
00:07:47,880 --> 00:07:49,860
So here, let's push this up.

103
00:07:50,990 --> 00:07:54,530
And now let's build in this cart item functionality.

104
00:07:54,890 --> 00:07:55,910
I'll see you in the next video.
