1
00:00:00,670 --> 00:00:01,900
Hello and welcome back.

2
00:00:02,440 --> 00:00:08,460
So in the last lesson, we served up our localhost eight thousand, which is Our Gatsby application,

3
00:00:08,950 --> 00:00:11,080
and in it we saw that right away.

4
00:00:11,110 --> 00:00:12,550
We have these two pages.

5
00:00:12,970 --> 00:00:15,790
This first page has this little astronaut picture on it.

6
00:00:16,000 --> 00:00:22,030
And the second page is just a welcome to page two that we can navigate back to page one.

7
00:00:23,190 --> 00:00:28,800
Now, this is really interesting because this actually allows us to highlight one of the key features

8
00:00:28,800 --> 00:00:32,970
in Gatsby, which is that inside of this page is folder.

9
00:00:33,240 --> 00:00:41,940
As long as you add a new file here, Gatsby will automatically try to load a new page for you, meaning

10
00:00:41,940 --> 00:00:46,560
that it will build a new page based on the title of the file that you write.

11
00:00:47,340 --> 00:00:49,710
And inside of this file index.

12
00:00:49,740 --> 00:00:52,620
Yes, this is actually our astronaut page.

13
00:00:53,280 --> 00:00:56,490
And what it is, is just important to react.

14
00:00:56,500 --> 00:01:00,450
And it's a functional component that leverages this link.

15
00:01:00,990 --> 00:01:06,180
Now, this link component that we get from Gatsby is pretty much a Gatsby version of the React router

16
00:01:06,180 --> 00:01:09,570
link, meaning that navigation happens with this link component.

17
00:01:10,490 --> 00:01:14,240
We also import this layout, image and SEO component.

18
00:01:14,600 --> 00:01:19,910
Now, these are just components that come by default with Gatsby and they're actually quite simple.

19
00:01:20,830 --> 00:01:28,630
The layout component essentially wraps around some bunch of HTML elements or components, and it provides

20
00:01:28,630 --> 00:01:33,670
some styling to it as well as it provides it some data that will look at a little later.

21
00:01:34,330 --> 00:01:40,110
The image component allows us to do lazy loading with images and optimizing those images.

22
00:01:40,390 --> 00:01:45,430
It's just a Gatsby methodology that makes images more performant on the Web.

23
00:01:45,940 --> 00:01:50,920
And then the echo component is meant exactly for search engine optimization.

24
00:01:51,310 --> 00:01:58,570
You can pass it a title, a description, Alang, a meta, or any of these other properties that you

25
00:01:58,570 --> 00:01:59,350
see right here.

26
00:02:00,040 --> 00:02:05,680
So what this does is it makes search engine crawlers more performant for our website so that we show

27
00:02:05,680 --> 00:02:10,380
up higher when people might be Googling for things related to what we write inside of our blog.

28
00:02:10,840 --> 00:02:16,140
Now, we will use some of these components when we actually build out our blog posts.

29
00:02:16,660 --> 00:02:19,890
But for now, let's go back to looking at our pages folder.

30
00:02:20,530 --> 00:02:27,010
So, as I explained earlier, if you add a new file, Gatsby will generate a new route for you inside

31
00:02:27,010 --> 00:02:30,900
of your application based on the name of the file that you created.

32
00:02:31,450 --> 00:02:35,020
So let's actually just make a new file called Page three, dot us.

33
00:02:35,560 --> 00:02:38,640
You can name this whatever you want, but I'm just going to call it page three.

34
00:02:39,310 --> 00:02:43,240
I'm going to take this code from page two and just remove some things that we don't need.

35
00:02:44,520 --> 00:02:48,990
And what I'm going to do is simply just generate an H1.

36
00:02:50,480 --> 00:02:53,870
Rename to this to third page.

37
00:02:55,070 --> 00:02:57,800
And then say hello from the third page.

38
00:03:02,540 --> 00:03:10,070
As long as we export something out that is a component as the default from this file, Gatsby will know

39
00:03:10,070 --> 00:03:13,060
to use this component for that route.

40
00:03:13,580 --> 00:03:18,920
So let's test this out if we go back to our application and navigate to our new page three.

41
00:03:19,840 --> 00:03:25,100
We'll see that we have our hello from the third page, so this is what's really great about Gatsby.

42
00:03:25,120 --> 00:03:33,010
It's really easy to build new routes and new pages just by adding files to our pages folder and making

43
00:03:33,010 --> 00:03:40,000
sure we export as the default, some component that allows Gatsby to use that as the page that it's

44
00:03:40,000 --> 00:03:41,780
trying to render now.

45
00:03:41,920 --> 00:03:47,440
Another great thing we actually get with our pages is access to this 404.

46
00:03:48,440 --> 00:03:56,450
Now, this for a four page Gatsby will automatically know to use in live production if the user navigates

47
00:03:56,450 --> 00:03:58,300
to some page that doesn't exist.

48
00:03:58,820 --> 00:04:06,080
So inside of our development server, if we go to say something like this, we'll see that it takes

49
00:04:06,080 --> 00:04:11,780
us to a page that tells us actually all of the routes we have available to access.

50
00:04:12,260 --> 00:04:16,600
But in live production, it will end up showing this for a four page.

51
00:04:16,790 --> 00:04:22,850
And this is one of the nice things about using Gatsby for a more opinionated framework like this.

52
00:04:23,060 --> 00:04:29,720
It has made a lot of these decisions for us in terms of how to handle routing, how to set up pages,

53
00:04:30,110 --> 00:04:37,430
because unlike a normal react application that just rolls with react, you have to include all of the

54
00:04:37,430 --> 00:04:43,370
different libraries that you want to include in order to handle routing, in order to handle four fours.

55
00:04:43,550 --> 00:04:48,220
As you'll see inside of our course, we have to make those decisions for ourselves.

56
00:04:48,560 --> 00:04:55,370
But with Gatsby, you just have to learn how Gatsby does certain things and then follow along with the

57
00:04:55,370 --> 00:04:57,790
way that Gatsby has set up the project.

58
00:04:58,280 --> 00:05:04,730
So for us in this case, it's just a matter of how do we handle the pages that we want to add to our

59
00:05:04,730 --> 00:05:05,570
application.

60
00:05:06,260 --> 00:05:09,020
So conceptually, we just have to keep this in mind.

61
00:05:09,260 --> 00:05:16,340
If we want to make new pages, we add them into this page folder and the page route will be named whatever

62
00:05:16,340 --> 00:05:18,440
name we've given to our files.

63
00:05:18,680 --> 00:05:26,000
Now, this does bring me to a very important caveat about Gatsby, because Gatsby builds all of our

64
00:05:26,000 --> 00:05:27,560
static pages ahead of time.

65
00:05:27,890 --> 00:05:34,070
We do not dynamically compose them, which means that the way that you're used to structuring your code

66
00:05:34,070 --> 00:05:35,880
is going to be a little different.

67
00:05:36,110 --> 00:05:42,440
Now, one thing that you might have noticed is that every one of our pages is wrapped inside of our

68
00:05:42,440 --> 00:05:47,750
layout component and the layout component we get with Gatsby with the starter project.

69
00:05:48,290 --> 00:05:55,820
Now, the reason for this is because we need to actually render the header and the footer and any consistent

70
00:05:55,820 --> 00:05:59,120
styling between the pages every single time.

71
00:05:59,630 --> 00:06:01,080
Now, why is it this way?

72
00:06:01,640 --> 00:06:07,580
Well, if you remember in the last lesson we talked about Gatsby being a static site generator, meaning

73
00:06:07,580 --> 00:06:14,420
that Gatsby needs to actually build those pages on the build step, meaning that it generates every

74
00:06:14,420 --> 00:06:20,100
single page is complete html that the user needs on their browser in order to view the page.

75
00:06:20,660 --> 00:06:27,290
So if we want this header and footer on every single page that we have, including our route, including

76
00:06:27,290 --> 00:06:33,320
page to and including the new page three component that we built and any other further page, we need

77
00:06:33,320 --> 00:06:39,680
to always provide it with all of the components and all of the styling for that page on that pages.

78
00:06:40,580 --> 00:06:46,340
This is different from a typical REACT application where you might have different levels of components

79
00:06:46,550 --> 00:06:51,680
that will house the roots that hold the subsequent nested components inside.

80
00:06:51,860 --> 00:06:57,200
As you might see, when you build something in react using a library like React Router Dom.

81
00:06:58,020 --> 00:07:05,040
In Rotterdam, you might have a high level app component that has root components inside that will then

82
00:07:05,040 --> 00:07:11,730
lead to further nested trees of components, meaning that you don't have to actually dynamically compose

83
00:07:12,060 --> 00:07:17,410
this code every single time and every single component if you want to render a header.

84
00:07:18,150 --> 00:07:23,460
Again, this is a caveat of statically generated websites because statically generate websites need

85
00:07:23,460 --> 00:07:27,310
to generate static HTML for every single page.

86
00:07:27,690 --> 00:07:33,810
So how you want that page to look needs to have everything on it already in order for it to generate

87
00:07:33,810 --> 00:07:34,430
that page.

88
00:07:35,130 --> 00:07:40,950
So hopefully that makes sense because that's a big caveat about building our pages inside of Gatsby.

89
00:07:41,990 --> 00:07:48,920
Now, with that in mind, one other thing about the layout is we'll see here that we are using a little

90
00:07:48,920 --> 00:07:49,590
bit of graphic you.

91
00:07:49,590 --> 00:07:54,440
Well, now, you might be familiar with everything here, especially if you've taken the course, as

92
00:07:54,440 --> 00:07:55,310
we learned, with graphics.

93
00:07:55,330 --> 00:08:02,570
Well, the difference here is that Gatsby has provided its own hook called use static query used that

94
00:08:02,570 --> 00:08:08,540
a query is a custom hook that Gatsby wrote that allows you to extract the value of whatever query you're

95
00:08:08,540 --> 00:08:09,890
making against the graphics.

96
00:08:09,920 --> 00:08:16,910
Well, in order to pluck out the data now, as you can see here, what their query is querying is this

97
00:08:16,910 --> 00:08:21,260
thing called site with this object that calls for the metadata.

98
00:08:21,740 --> 00:08:25,840
Now, this metadata is what we saw inside of Our Gatsby config.

99
00:08:26,150 --> 00:08:31,850
This site, Metadata, contains a title description, an author by default, which you can pull off

100
00:08:31,850 --> 00:08:35,780
using graphical and adding that query that we saw in the layout component.

101
00:08:36,670 --> 00:08:42,400
And by doing so, we're now able to pluck off that title that we've stored in our config and then render

102
00:08:42,400 --> 00:08:48,190
it inside of this layout component so that we don't have to fetch it inside of every single one of our

103
00:08:48,190 --> 00:08:49,090
page components.

104
00:08:49,360 --> 00:08:56,110
Now, for example, if we wanted to change the title, if we go to our config object and we change the

105
00:08:56,110 --> 00:08:58,630
title here to Eva's blog.

106
00:09:00,800 --> 00:09:03,830
We'll actually see that we get that update.

107
00:09:04,520 --> 00:09:10,490
So that's one of the great things as well, is that if we wanted to keep something on our website that

108
00:09:10,490 --> 00:09:16,700
we needed to use consistently on all of our pages, probably through our layout of some kind, we can

109
00:09:16,700 --> 00:09:19,220
easily just change it inside of the site metadata.

110
00:09:20,000 --> 00:09:25,670
Now, we're definitely going to take a deeper look at the graph section that comes with Gatsby, and

111
00:09:25,670 --> 00:09:27,200
we're going to do that in the next lesson.

112
00:09:27,410 --> 00:09:28,880
So I will see you in the next lesson.
