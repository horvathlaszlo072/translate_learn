1
00:00:00,750 --> 00:00:01,650
Welcome back, everyone.

2
00:00:02,520 --> 00:00:07,020
So in this video, let's tidy up our payment form component to make it more user friendly.

3
00:00:07,650 --> 00:00:14,880
We need to put in a real amounts and we also need to perhaps block the button or show some kind of pending

4
00:00:14,880 --> 00:00:16,880
state when this payment is going through.

5
00:00:17,520 --> 00:00:22,080
Because usually with card payments, it's probably one of the most tense moments for anyone from a user

6
00:00:22,080 --> 00:00:23,040
experience standpoint.

7
00:00:23,670 --> 00:00:29,520
E-commerce typically really has a high need for security as well as a positive user experience just

8
00:00:29,520 --> 00:00:34,080
because, again, parting with money is one of the most painful things that a user can go through.

9
00:00:35,050 --> 00:00:42,790
So what we want to do is we want to import in the use statehood from react because we're going to hold

10
00:00:42,790 --> 00:00:46,600
some state that will determine whether or not we're in a loading state for making a payment.

11
00:00:47,320 --> 00:00:53,500
We also need to bring in the use selector hook because we're going to need to pull off two values.

12
00:00:53,650 --> 00:00:55,370
One is the current user.

13
00:00:55,390 --> 00:00:57,700
The other is the actual amount.

14
00:00:59,260 --> 00:01:02,710
So in order to pull those off, of course we need our selectors.

15
00:01:03,250 --> 00:01:09,250
So let's bring in our select cart total from.

16
00:01:10,720 --> 00:01:11,650
Our store.

17
00:01:13,050 --> 00:01:14,250
And our cart.

18
00:01:14,850 --> 00:01:16,470
And our cart selector.

19
00:01:17,540 --> 00:01:24,710
And similarly, let's also bring in our select current user from our store.

20
00:01:25,710 --> 00:01:26,460
Our user.

21
00:01:27,710 --> 00:01:28,820
And our user selector.

22
00:01:30,660 --> 00:01:38,790
So now that we have our two selectors, what we want to do is we want to come down into our actual component

23
00:01:39,090 --> 00:01:41,370
so that we can actually pull off these values.

24
00:01:41,820 --> 00:01:49,110
So first I'm going to say const amount is equal to use selector select cart total.

25
00:01:50,430 --> 00:01:57,870
And then what I'm also going to get is the current user cause current user is equal to use selector.

26
00:01:59,820 --> 00:02:01,230
Select current user.

27
00:02:05,940 --> 00:02:06,780
With these values.

28
00:02:06,780 --> 00:02:13,080
Now, what we're going to do is we are going to pass this amount value in instead of our hardcoded value,

29
00:02:13,260 --> 00:02:19,740
and we need to make sure that this is equal to amount multiplied by 100 because currently our values

30
00:02:19,740 --> 00:02:21,540
are stored as whole dollars.

31
00:02:22,110 --> 00:02:27,480
So by multiplying it by 100 or converting it into the sense of value, which is how Stripe expects all

32
00:02:27,480 --> 00:02:28,740
of its payment values.

33
00:02:29,640 --> 00:02:36,630
As for current user now, what we can say is that the name goes to we can say if current user exists,

34
00:02:36,900 --> 00:02:40,020
then we'll use current user dot display name.

35
00:02:41,100 --> 00:02:45,390
Otherwise we can put, let's say guest.

36
00:02:48,870 --> 00:02:54,500
Typically what you would do here is inside of the checkout flow, you would have more forms, more fields.

37
00:02:54,510 --> 00:02:58,080
You would ask for their email, you would ask for the shipping address, etc..

38
00:02:58,500 --> 00:03:02,160
But again, we're just trying to get a lean actual card payment here.

39
00:03:02,180 --> 00:03:04,020
You can add more of them if you want.

40
00:03:04,590 --> 00:03:06,300
Again, the docs are pretty straightforward.

41
00:03:06,810 --> 00:03:11,040
I'm just going to use the basic card form just to show you the actual integration.

42
00:03:12,390 --> 00:03:15,090
If you want to expand on this feature, of course, feel free to do so.

43
00:03:16,470 --> 00:03:22,590
Here we have our completed actual intent now and the actual payment.

44
00:03:23,490 --> 00:03:27,510
But what we also want to do is we want to have some kind of loading state for the user.

45
00:03:28,260 --> 00:03:33,420
So this is where we might do something like Konst is processing payment.

46
00:03:35,680 --> 00:03:38,470
And what they set is processing payment.

47
00:03:39,430 --> 00:03:43,660
This will be you state of a boolean value and by default it's false.

48
00:03:44,530 --> 00:03:52,090
And what we'll do is we can actually disable our button if this is in some type of state like this.

49
00:03:52,690 --> 00:04:00,130
So here what I'm going to do is I am going to say that this button is disabled if is processing payment

50
00:04:00,130 --> 00:04:00,700
is true.

51
00:04:01,710 --> 00:04:07,230
So in order for this to be true, what we need to do is set it to true when this payment is happening.

52
00:04:08,220 --> 00:04:14,550
So here, inside the moment that we pass this point and we're about to start a fetch here we're going

53
00:04:14,550 --> 00:04:21,000
to set is processing payment to true and the point when we know that we have it back and we're done

54
00:04:21,000 --> 00:04:25,920
processing is when we hit this portion well they're going to have an error or we're going to succeed

55
00:04:25,920 --> 00:04:30,030
but it's all synchronous so here we can set is processing to false.

56
00:04:30,960 --> 00:04:39,360
And now if we come back to the application inside of our React application and I insert in a test card.

57
00:04:43,340 --> 00:04:43,700
There.

58
00:04:43,730 --> 00:04:47,150
You should now see that this button is disabled.

59
00:04:49,250 --> 00:04:51,740
Meaning that if I keep clicking it, nothing will happen.

60
00:04:51,980 --> 00:04:53,420
Notice how we just get the one alert?

61
00:04:54,590 --> 00:04:59,150
But however, the thing is that this is not that from a UI standpoint clear to us that this button is

62
00:04:59,150 --> 00:05:04,630
disabled so we can even go a step further and improve upon our button component.

63
00:05:05,860 --> 00:05:12,100
What I want to do is come in here and I am actually going to create a spin out state for this.

64
00:05:12,880 --> 00:05:17,350
So first off, what I also want to do is I want to expand upon the functionality.

65
00:05:17,560 --> 00:05:21,670
I'm actually going to put a is loading prop that we can conditionally pass in.

66
00:05:22,570 --> 00:05:29,110
If this gets passed in, then what we'll do is on the button itself will say disabled.

67
00:05:31,340 --> 00:05:33,680
Is loading, so now we don't have to coat it.

68
00:05:34,070 --> 00:05:38,600
However, if there is another condition that would disable this, meaning that if we want it to pass

69
00:05:38,600 --> 00:05:44,510
and disabled for something else, our other prop spread, it will overwrite this disabled value.

70
00:05:44,990 --> 00:05:47,570
So now this gives us both functionalities.

71
00:05:49,470 --> 00:05:55,980
What we also want to do is we want to be able to show a loading spinner instead of the actual text inside

72
00:05:55,980 --> 00:05:56,370
this button.

73
00:05:56,700 --> 00:06:03,870
What I'm going to do is I am going to go into button styles and I'm going to make another spinner.

74
00:06:05,100 --> 00:06:11,100
So for this spinner, what I want you to do is you can pretty much just take the spinner that we already

75
00:06:11,100 --> 00:06:14,070
have inside of Stiles and copy this over.

76
00:06:14,520 --> 00:06:18,330
If you want it to import this from the spinner, Stiles, you can do that as well.

77
00:06:19,240 --> 00:06:23,470
So in order to do that, you would just have to copy it over.

78
00:06:23,470 --> 00:06:25,120
But I want to tweak the width and height.

79
00:06:25,270 --> 00:06:27,070
So this is why I want to copy this over.

80
00:06:27,820 --> 00:06:29,130
But actually let me show you.

81
00:06:29,140 --> 00:06:35,350
We can do this inside of button, we can modify it, we can import in the spinner container

82
00:06:37,990 --> 00:06:40,810
from and we're going to go up.

83
00:06:41,990 --> 00:06:46,790
To our spinner component and we're going to target specifically spinner styles.

84
00:06:47,600 --> 00:06:54,830
And here with the spinner container, what we're going to say is export context.

85
00:06:54,980 --> 00:06:59,690
Button Spinner is a styled version of spinner container.

86
00:07:00,230 --> 00:07:03,800
So remember, you can pass it any store component, overwrite any of the styling.

87
00:07:04,130 --> 00:07:06,540
The reason why is because I want the width to be smaller.

88
00:07:06,560 --> 00:07:08,090
I'm going to do with 30 pixels.

89
00:07:08,090 --> 00:07:08,540
Height.

90
00:07:08,690 --> 00:07:09,650
30 pixels.

91
00:07:10,890 --> 00:07:13,380
So I'm just reducing the actual size.

92
00:07:13,500 --> 00:07:14,320
Everything else.

93
00:07:14,340 --> 00:07:15,510
I'm going to keep the exact same.

94
00:07:16,640 --> 00:07:22,870
The other thing I'm going to want to do is up here inside of the actual base button.

95
00:07:22,970 --> 00:07:30,440
I'm also going to make sure that I vertically align this component zooming, say, align items center.

96
00:07:32,170 --> 00:07:35,560
And now we just need to copy the button spinner over.

97
00:07:38,280 --> 00:07:43,740
And then what we can say is that inside of here if is loading is true.

98
00:07:45,910 --> 00:07:48,010
Then show the button spinner.

99
00:07:51,050 --> 00:07:52,610
Otherwise show the children.

100
00:07:53,760 --> 00:07:59,190
So if no value gets passed for as loading of course is loading is going to be undefined, which is false,

101
00:07:59,400 --> 00:08:00,210
which will default.

102
00:08:00,210 --> 00:08:00,930
Show the children.

103
00:08:02,100 --> 00:08:05,430
So here, this is our new and improved button component.

104
00:08:06,930 --> 00:08:09,330
In order for us to use this, it's already here.

105
00:08:10,050 --> 00:08:15,720
If anything, I might just want to make sure that this is showing the invert about and type, which

106
00:08:15,720 --> 00:08:16,260
it already is.

107
00:08:16,320 --> 00:08:17,880
So let's save this and let's go check.

108
00:08:18,930 --> 00:08:20,370
Let's just refresh for good measure.

109
00:08:23,340 --> 00:08:25,110
And now the total is 540.

110
00:08:25,830 --> 00:08:29,250
Here for the card number, I'm going to do four, two, four, two, four, two, four, two.

111
00:08:30,120 --> 00:08:32,310
Looks like I missed type one of these values.

112
00:08:32,310 --> 00:08:37,140
Four, two, four, two, four, two, four, two, four, two, four, two.

113
00:08:37,170 --> 00:08:37,620
There we go.

114
00:08:39,440 --> 00:08:39,760
Okay.

115
00:08:39,770 --> 00:08:42,680
As long as this is correct on the date as forward, everything else doesn't matter.

116
00:08:43,100 --> 00:08:43,910
I have pay now.

117
00:08:45,950 --> 00:08:47,270
And I see payments excessive.

118
00:08:47,360 --> 00:08:48,240
We didn't see the loader.

119
00:08:48,500 --> 00:08:53,360
Of course it's because I did not modify this from disabled to is loading like this.

120
00:08:53,960 --> 00:08:54,800
Let's save.

121
00:08:55,340 --> 00:08:56,030
Let's go back.

122
00:08:56,030 --> 00:08:56,810
Let's refresh.

123
00:09:00,130 --> 00:09:07,270
Inside again of our card number 424242424, two, four, two, four, two, four, two.

124
00:09:08,800 --> 00:09:09,640
Four 244.

125
00:09:10,560 --> 00:09:12,450
Hey, now that we see our loader.

126
00:09:12,630 --> 00:09:15,660
This tells us that we're prompted payments accessible.

127
00:09:17,000 --> 00:09:17,600
And there we go.

128
00:09:18,870 --> 00:09:20,190
Any other tweaks we can make.

129
00:09:20,670 --> 00:09:23,640
We could, of course, improve upon this button as well.

130
00:09:24,390 --> 00:09:26,280
We can give it a little bit more spacing.

131
00:09:26,280 --> 00:09:36,510
So what we could do is import in the button from our button slash button component, and then we can

132
00:09:36,510 --> 00:09:39,300
call this, ah, payment button.

133
00:09:42,480 --> 00:09:44,910
Which is equal to styled button.

134
00:09:46,190 --> 00:09:47,540
Well, here we go.

135
00:09:48,320 --> 00:09:54,670
And let's say, for example, we wanted something like maybe a margin or yeah, let's do a margin that's

136
00:09:54,680 --> 00:09:58,310
margin left auto so that we push it all the way to the right.

137
00:09:58,910 --> 00:10:01,130
And then let's do a margin top of 30 pixels.

138
00:10:03,320 --> 00:10:08,180
Now, of course, everything on this button is going to behave like a custom button that we've made.

139
00:10:09,080 --> 00:10:14,540
So instead of importing in button, we can just import in.

140
00:10:16,320 --> 00:10:23,340
From our own payment form styles the payment button, and we can just replace the button.

141
00:10:27,030 --> 00:10:27,930
With our payment button.

142
00:10:31,340 --> 00:10:31,790
There we go.

143
00:10:32,150 --> 00:10:33,050
It looks a little better.

144
00:10:33,230 --> 00:10:34,010
We have pay now.

145
00:10:34,430 --> 00:10:37,250
The spinoff occurs and then the payment successful.

146
00:10:37,850 --> 00:10:41,210
Well, you can also do is you can fire an action to clear the cart from this point.

147
00:10:41,330 --> 00:10:46,130
Again, whatever you think you want to do to make this experience more fluid from a user experience

148
00:10:46,130 --> 00:10:50,540
standpoint, you now have every single skill you have use of saga's.

149
00:10:50,540 --> 00:10:52,730
You know how to use your selectors, you know how to use your action.

150
00:10:52,880 --> 00:10:54,860
You know how to use these components.

151
00:10:55,400 --> 00:11:00,440
I have now taught you every single thing you need in order to improve this experience however you want.

152
00:11:01,010 --> 00:11:02,750
So really, this is my challenge to you now.

153
00:11:03,050 --> 00:11:04,910
You can make an order confirmation page.

154
00:11:05,450 --> 00:11:11,540
You can do whatever you want, because after the step we actually see inside of Stripe, if we refresh,

155
00:11:12,200 --> 00:11:17,540
we should see multiple payments now, all for that 540 amount that we have made recently.

156
00:11:18,710 --> 00:11:19,070
Here.

157
00:11:19,520 --> 00:11:20,120
There we see it.

158
00:11:20,750 --> 00:11:22,640
Every time we fight it off, we were successful.

159
00:11:23,120 --> 00:11:29,660
We had our guest because currently, of course, we are not logged in, but if we're signed in, they'd

160
00:11:29,660 --> 00:11:31,130
see our username instead.

161
00:11:31,310 --> 00:11:35,690
So let's try this with our actual account.

162
00:11:36,050 --> 00:11:36,710
One, two, three, four.

163
00:11:36,710 --> 00:11:37,400
One, two, three, four.

164
00:11:38,120 --> 00:11:38,690
We'll sign in.

165
00:11:39,890 --> 00:11:41,270
We'll go to our checkout.

166
00:11:43,340 --> 00:11:46,550
I don't want to say that I'm going to do this card.

167
00:11:51,760 --> 00:11:52,350
Successful.

168
00:11:53,890 --> 00:11:55,060
And now if I refresh.

169
00:11:56,870 --> 00:11:58,220
We see my display.

170
00:11:59,120 --> 00:12:00,470
We fully integrated with Stripe.

171
00:12:01,710 --> 00:12:02,220
There you go.

172
00:12:02,700 --> 00:12:09,180
This is now a fully fledged out, honestly, pretty decently working e-commerce website.

173
00:12:09,510 --> 00:12:12,660
There's additional security checks you can add, of course, for Stripe.

174
00:12:12,720 --> 00:12:17,310
But again, it's just about sifting through the documentation, adding some additional configuration

175
00:12:17,310 --> 00:12:17,850
patterns.

176
00:12:18,450 --> 00:12:23,130
Most of that, though, is not the core base of what we need from a functionality goes.

177
00:12:23,370 --> 00:12:25,980
You have a fully fleshed out e-commerce website.

178
00:12:26,250 --> 00:12:27,570
A lot of these patterns will scale.

179
00:12:27,990 --> 00:12:32,850
Really, at this point, it's just about expanding upon your inventory, adding more features, changing

180
00:12:32,850 --> 00:12:34,740
the UI so that maybe it's a little prettier.

181
00:12:35,690 --> 00:12:40,400
But this is the very last feature as far as adding additional functionality to this website goes.

182
00:12:41,680 --> 00:12:48,460
So now in the next video, let's push this up and make sure that our net left also builds out the functions.

183
00:12:49,060 --> 00:12:51,520
And to do that, we'll have to tweak our analysis settings a little bit.

184
00:12:51,970 --> 00:12:54,610
So join me in the next video where we will deploy this.

185
00:12:55,120 --> 00:12:55,990
I'll see in the next video.
