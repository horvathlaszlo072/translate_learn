1
00:00:00,150 --> 00:00:01,170
Welcome back, everyone.

2
00:00:01,800 --> 00:00:08,250
And the last video I asked you about creating a new context in order to store all of our relevant data.

3
00:00:09,160 --> 00:00:11,080
In this video, we're going to do this together.

4
00:00:11,920 --> 00:00:18,160
So to start, let's go into our contacts folder and let's make a new file called product context dot

5
00:00:18,170 --> 00:00:18,790
GSX.

6
00:00:20,020 --> 00:00:26,710
When starting out with a context, remember, you always need to import the create context method from

7
00:00:26,710 --> 00:00:31,990
React once we start actually flushing this out will start figuring out what else we need.

8
00:00:32,590 --> 00:00:36,940
We also need to import in those products so we can call it products.

9
00:00:37,060 --> 00:00:40,720
You can actually call this whatever you want because it's really just the variable that you're setting.

10
00:00:41,050 --> 00:00:44,200
And we need to go and get it from the shop data.

11
00:00:44,530 --> 00:00:44,980
Jason.

12
00:00:45,900 --> 00:00:49,590
Then what we're going to do is we are going to initialize our context.

13
00:00:50,040 --> 00:00:53,440
So let's not even think about what it is that will contain yet.

14
00:00:53,460 --> 00:00:55,440
Let's just build out the scaffold.

15
00:00:55,800 --> 00:01:01,860
So I'm going to say product context, which is equal to create context and inside is just going to be

16
00:01:01,860 --> 00:01:03,240
an empty object for now.

17
00:01:04,080 --> 00:01:07,110
Finally, what we need to export is also a provider.

18
00:01:07,590 --> 00:01:13,890
Remember that for any context, we need both the context value as well as the provider itself and the

19
00:01:13,890 --> 00:01:15,510
provider is going to be.

20
00:01:16,500 --> 00:01:16,980
A.

21
00:01:18,160 --> 00:01:21,520
Component that returns product context provider.

22
00:01:23,000 --> 00:01:26,600
And what do we pass inside while we need the children?

23
00:01:27,380 --> 00:01:31,850
And then we need to render the children between our product contacts provider.

24
00:01:33,330 --> 00:01:37,560
So now that we have this, what we're missing is the value.

25
00:01:37,800 --> 00:01:39,840
And this is where we need to start filling it in.

26
00:01:40,440 --> 00:01:42,000
So what is it that we want to store?

27
00:01:42,810 --> 00:01:50,430
Well, we know that we want to store an array of products, so here products we can initialize as an

28
00:01:50,430 --> 00:01:52,290
empty array to signify what we want.

29
00:01:53,280 --> 00:01:59,460
Next, what we need is we also want some function that allows us to potentially set those products.

30
00:02:00,150 --> 00:02:05,730
But for now, we don't need it necessarily yet because we haven't really figured out where we're going

31
00:02:05,730 --> 00:02:07,260
to fetch and then set them in.

32
00:02:07,470 --> 00:02:11,860
We can always add this a little later inside of our actual component.

33
00:02:11,880 --> 00:02:19,170
Now we can say Konst products and set products is what we need from you state.

34
00:02:19,950 --> 00:02:24,660
And in order to use state, we need to actually import this in from react as a hook.

35
00:02:26,240 --> 00:02:33,230
So we have you state and for our default value, let's just pass up products because for now, we're

36
00:02:33,230 --> 00:02:36,050
just importing them since they're hardcoded again.

37
00:02:36,050 --> 00:02:39,180
When we start touching them from our database, we can update this code accordingly.

38
00:02:39,200 --> 00:02:41,270
Right now, we're just trying to get everything to work.

39
00:02:42,050 --> 00:02:48,740
And then what we're going to export out of the value is just the products as an object, so we can just

40
00:02:48,740 --> 00:02:51,020
pass this value in for value.

41
00:02:54,110 --> 00:03:00,140
And now let's just save this and bring this into the appropriate place, which is in our index, yes.

42
00:03:00,680 --> 00:03:08,990
So let's take our products provider going to index us and then import the provider, making sure to

43
00:03:08,990 --> 00:03:11,450
update our text with the correct.

44
00:03:12,570 --> 00:03:13,980
Route to the correct file.

45
00:03:15,140 --> 00:03:20,960
And then let's think about the actual order here, so we know we want to insert products provider and

46
00:03:20,960 --> 00:03:21,740
wrap our app.

47
00:03:22,100 --> 00:03:24,800
But what about the other provider user provider?

48
00:03:25,010 --> 00:03:26,330
And what about browser router?

49
00:03:27,200 --> 00:03:35,030
Generally speaking, you want to think about whether or not whatever your wrapping needs, actual access

50
00:03:35,030 --> 00:03:37,160
to whatever it is that you are providing.

51
00:03:37,670 --> 00:03:42,950
So in our particular case with the products provider, does the browser router ever need our products?

52
00:03:43,340 --> 00:03:46,190
No, the browser router isn't even our library.

53
00:03:46,430 --> 00:03:50,000
So essentially, we know for sure we want to be inside the browser, right?

54
00:03:50,600 --> 00:03:52,280
But what about user provider?

55
00:03:52,790 --> 00:03:54,050
Well, let's think about it like this.

56
00:03:54,410 --> 00:03:59,780
What is more useful for the user provider to have access to the products provider or for the products

57
00:03:59,780 --> 00:04:01,970
provider to have access to the user provider?

58
00:04:02,630 --> 00:04:08,000
Generally speaking, this really depends on your own code and also depends on what it is that you're

59
00:04:08,000 --> 00:04:11,390
building and what features you need to build regarding this kind of separation.

60
00:04:11,780 --> 00:04:18,380
But if you think about it, chances are when you're fetching products, if you have an international

61
00:04:18,380 --> 00:04:27,220
application, you're probably going to be filtering down what products that user can access by geo location.

62
00:04:27,590 --> 00:04:32,960
Now, whether or not that geolocation handling to deliver certain products to a user requesting them

63
00:04:33,170 --> 00:04:38,870
is done on the front end or the back end, well, that kind of varies depending on your project's architecture,

64
00:04:39,050 --> 00:04:41,390
and this varies from company to company anyways.

65
00:04:41,570 --> 00:04:47,300
But this is just more so to give you an idea or an example of why the order might matter.

66
00:04:47,570 --> 00:04:53,390
So for us, if we take that example well, we know that the products should be able to then access the

67
00:04:53,390 --> 00:04:54,080
user.

68
00:04:54,350 --> 00:05:00,560
So if that's the case, then we would want to wrap the user provider around the products provider.

69
00:05:00,860 --> 00:05:07,340
So then this way, the products are able to reach up into the user provider and get the value, whereas

70
00:05:07,340 --> 00:05:12,470
the user provider can't necessarily go into its children and are to fetch that data.

71
00:05:12,740 --> 00:05:13,940
So that's something to remember.

72
00:05:14,720 --> 00:05:20,750
So now that we have our products provider set up, let's actually start using it in order to access

73
00:05:20,750 --> 00:05:21,320
what we need.

74
00:05:21,560 --> 00:05:25,540
So I want to copy over product context, and I want to go back to my shop component.

75
00:05:26,120 --> 00:05:31,910
And now, instead of relying on the shop data like so I want to replace my codes that I'm able to use

76
00:05:31,910 --> 00:05:33,530
the context that we've just created.

77
00:05:33,920 --> 00:05:38,630
So here what I want to do is I want to import in used context.

78
00:05:39,820 --> 00:05:43,630
And then what I'm going to do is I'm going to import in the context as well.

79
00:05:44,080 --> 00:05:46,960
So I want to import in products context.

80
00:05:48,970 --> 00:05:53,110
And then we're just going to say, give me the products.

81
00:05:54,720 --> 00:05:59,010
From use context passing in the product context.

82
00:06:00,320 --> 00:06:06,560
So one quick thing is that my product context, I want to make this plural products context.

83
00:06:08,240 --> 00:06:14,090
So let me just make that change and then let me go back here and updated similarly.

84
00:06:14,780 --> 00:06:21,290
And then finally, if we just replace products like so now this should continue working as we had it

85
00:06:21,290 --> 00:06:21,710
before.

86
00:06:22,010 --> 00:06:22,970
So I'm going to save this.

87
00:06:23,630 --> 00:06:26,000
Go back to my application and there we go.

88
00:06:26,330 --> 00:06:28,370
We see that our products are still present.

89
00:06:29,740 --> 00:06:34,300
So next, what we're going to do is we want to start styling out our products.

90
00:06:34,900 --> 00:06:40,420
So what I'm going to do is I'm going to create a product card in order to actually style this more appropriately.

91
00:06:41,020 --> 00:06:42,820
And that's what we'll do in the next video.

92
00:06:43,150 --> 00:06:45,730
So join me in the next video where we'll take a swing at that.
