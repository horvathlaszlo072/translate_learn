1
00:00:00,150 --> 00:00:01,710
Hello, everyone, and welcome back.

2
00:00:02,280 --> 00:00:07,200
In this video, we are going to start building out our first reactor application.

3
00:00:07,620 --> 00:00:11,100
The application is going to be this monster's Rolodex project.

4
00:00:11,730 --> 00:00:17,910
What this project is, it's a single page application reactor app, and what it lists is a bunch of

5
00:00:17,910 --> 00:00:19,200
these different monsters.

6
00:00:19,800 --> 00:00:24,540
You can also see the monsters and actually filter them using the search bar.

7
00:00:24,930 --> 00:00:29,280
So let's say, for example, we wanted to filter for Clementine as we start typing.

8
00:00:29,550 --> 00:00:37,110
We will see that we will start filtering out any monster that does not have a name where it matches

9
00:00:37,110 --> 00:00:38,220
what we typed in the string.

10
00:00:38,790 --> 00:00:44,670
It's a very simple application, but it'll teach us a lot about how reax works and how React application

11
00:00:44,850 --> 00:00:45,690
is structured.

12
00:00:46,630 --> 00:00:52,660
Getting started with a React application might seem very complicated because there's a lot of files

13
00:00:52,660 --> 00:00:58,420
that we would typically have to come up with and write from scratch if we wanted to actually write out

14
00:00:58,600 --> 00:01:00,010
an application and react.

15
00:01:00,580 --> 00:01:06,580
However, luckily for us, Facebook has actually created a tool that makes this significantly easier.

16
00:01:06,820 --> 00:01:09,640
And this tool is called Create React App.

17
00:01:10,510 --> 00:01:16,630
Create React app is pretty much just a tool that you can run inside of your command line.

18
00:01:16,900 --> 00:01:24,010
And what it will do for you is it will scaffold out a React project, a very bare bones react project.

19
00:01:24,250 --> 00:01:29,890
And scaffolding just means that it will set up all of the necessary files and folders and then link

20
00:01:29,890 --> 00:01:34,360
them appropriately so that you can get started with a React application.

21
00:01:34,810 --> 00:01:38,590
And that's what we're going to use to really understand how it works here.

22
00:01:38,590 --> 00:01:44,140
Inside of React Jazz's own documentation on Create React app, you'll see that it's very simple.

23
00:01:44,500 --> 00:01:48,820
It says, of course, that it is a comfortable environment for learning react and is the best way to

24
00:01:48,820 --> 00:01:51,160
start building a new single page application.

25
00:01:51,460 --> 00:01:55,600
So we're going to deep dive into what this means all of the different files in the different setups

26
00:01:55,600 --> 00:01:56,770
that it provides for you.

27
00:01:57,130 --> 00:02:02,920
And then we're going to deep dive into how we can do this without create racked up later in the course.

28
00:02:03,160 --> 00:02:05,590
So we're going to fully understand how all of this works under the hood.

29
00:02:05,800 --> 00:02:10,270
But for now, we're going to leverage it so that it makes our lives easier so we can get started with

30
00:02:10,270 --> 00:02:11,680
our first React application.

31
00:02:12,580 --> 00:02:19,030
So here you'll see what it says is that we want to run this command and create React app and then the

32
00:02:19,030 --> 00:02:22,450
name of the application that we want to call.

33
00:02:22,810 --> 00:02:27,880
So what it means is just that when it builds a forest, it will build it into a folder and we want to

34
00:02:27,880 --> 00:02:28,810
give it some kind of name.

35
00:02:29,500 --> 00:02:37,510
So here let's go into our terminal and we're going to type exactly what is said NPCs create React app

36
00:02:37,780 --> 00:02:44,860
and then the name of our folder, which it's going to actually put all of the files into that represents

37
00:02:44,860 --> 00:02:45,420
our projects.

38
00:02:45,420 --> 00:02:49,000
So I'm just going to call it Monster's Rolodex right here.

39
00:02:50,210 --> 00:02:56,390
Now what's happening is that you will see that Inpex is actually downloading the package and the latest

40
00:02:56,390 --> 00:03:02,000
version of Create React app in order to actually help us scaffold out this monster's Rolodex project

41
00:03:02,420 --> 00:03:09,830
scaffold on being actually generating again the files and folders required for our application to actually

42
00:03:09,830 --> 00:03:10,280
work.

43
00:03:10,790 --> 00:03:16,250
So this is really handy, but in this process, you might be wondering what is NPCs, what is Create

44
00:03:16,250 --> 00:03:16,940
React app?

45
00:03:17,240 --> 00:03:21,950
And let's take a little deep dive into all of these things while we're waiting for our project to be

46
00:03:21,950 --> 00:03:22,250
built.

47
00:03:22,760 --> 00:03:30,470
So I'm going to open a new tab, and what I'm also going to do is that I'm going to show you npm versus

48
00:03:30,470 --> 00:03:34,250
NPCs, because that actually be the best way to understand what NPCs does.

49
00:03:34,250 --> 00:03:39,680
And NPCs is actually a tool that gets included with npm version five point two and greater.

50
00:03:39,770 --> 00:03:42,470
So NPCs is actually a tool that lives within npm.

51
00:03:43,400 --> 00:03:49,940
So AMPM, as we know, is node package manager, these packages are just these different node related

52
00:03:49,940 --> 00:03:57,680
libraries or files and folders that get created by different tool developers online that we can use

53
00:03:57,680 --> 00:04:00,890
to help us with our node projects or JavaScript based projects.

54
00:04:01,910 --> 00:04:08,420
What this means is that npm is what we used to coordinate and also leverage these different packages

55
00:04:08,420 --> 00:04:11,900
that we download, create racked up is an example of one of these.

56
00:04:12,050 --> 00:04:19,100
It's just this tool that Facebook built that allows us to quickly and easily build out react applications

57
00:04:20,000 --> 00:04:22,870
so we can do this with 21:00 and not Ampex.

58
00:04:23,300 --> 00:04:29,210
The thing about npm is that npm is a installation as well as a executable environment.

59
00:04:29,690 --> 00:04:36,050
So what this means is that we can install directly, create React app and all of these different packages

60
00:04:36,050 --> 00:04:38,720
onto our local project local.

61
00:04:38,720 --> 00:04:43,880
Being this local folder I have, or we can install it globally on our computer.

62
00:04:44,120 --> 00:04:50,000
So if I do npm install and then the name, let's say, Create React app, what this will do is it will

63
00:04:50,000 --> 00:04:53,780
install and download, create React app locally into this folder.

64
00:04:54,050 --> 00:04:57,740
So that means that anything inside of this folder can leverage, create React app.

65
00:04:58,220 --> 00:05:03,560
However, if I wanted to use, create racked up in multiple projects, but I only wanted one version

66
00:05:03,560 --> 00:05:09,050
of it because create racked up, as we know, is a package created by Facebook and Facebook could be

67
00:05:09,050 --> 00:05:10,040
constantly updating it.

68
00:05:10,460 --> 00:05:14,900
So you might have numerous versions of create racked up in multiple different projects.

69
00:05:15,230 --> 00:05:19,400
But what if we want to always to leverage one version of it across our entire computer?

70
00:05:19,790 --> 00:05:20,900
Well, here it's very easy.

71
00:05:20,900 --> 00:05:26,770
We just say npm install dash, which means global, so install it globally and then create react.

72
00:05:27,710 --> 00:05:32,270
So this is typically how we used to do it before NPCs, meaning that what we have to do is we had to

73
00:05:32,270 --> 00:05:39,320
download down the latest version of Create React app if we wanted to use all of the latest features

74
00:05:39,320 --> 00:05:41,470
in order to build our React applications.

75
00:05:42,560 --> 00:05:46,490
So let me give you an example of what we can do with a very simple library.

76
00:05:46,640 --> 00:05:48,260
And it's called cows.

77
00:05:48,860 --> 00:05:54,110
So cows is a library that just draws out this cow that says whatever we pass it.

78
00:05:54,860 --> 00:06:01,010
So for example, if I wanted it globally again, what I do is npm install or npm AI, which is shorthand

79
00:06:01,010 --> 00:06:06,020
for install Dash G so globally make this available and I want cow say.

80
00:06:07,200 --> 00:06:12,060
So now it's going to download again, as we know, with npm all of the appropriate files and install

81
00:06:12,060 --> 00:06:12,630
it globally.

82
00:06:12,990 --> 00:06:15,690
So what I can do now is I can say, how say hello?

83
00:06:16,900 --> 00:06:22,060
And you'll see that it draws a little cow because I have this cow say Project Global installed, and

84
00:06:22,060 --> 00:06:24,400
it will just say the text that I passed, that which is hello.

85
00:06:25,330 --> 00:06:30,670
So if I wanted to see where I have this house, a project.

86
00:06:31,700 --> 00:06:37,430
I could do npm list, which just lists out the location of a package.

87
00:06:37,730 --> 00:06:44,480
So if I say npm list Kalsi, what I'm saying is that I want you to check the current folder for some

88
00:06:44,480 --> 00:06:45,740
package called causeI.

89
00:06:46,700 --> 00:06:48,920
And when you see this, you'll see that it's empty.

90
00:06:48,950 --> 00:06:52,040
Of course, it is the reason why we install that globally.

91
00:06:52,490 --> 00:06:59,570
So if I wanted to check and p.m. again list Dash Gee and then say now it's going to check the global

92
00:06:59,570 --> 00:07:04,100
location, which is your path location where we save all of our global install packages with npm.

93
00:07:04,580 --> 00:07:09,200
And now we say that, oh, there is a version, of course, here version point point.

94
00:07:10,040 --> 00:07:12,620
So here you can see that we have with npm.

95
00:07:12,620 --> 00:07:18,340
When we installed this library and then wanted to use it, we had to install it somewhere on our disk,

96
00:07:18,350 --> 00:07:20,150
our hard drive, our computer.

97
00:07:20,420 --> 00:07:25,670
This could be in our local project folder or this could be globally on our computer.

98
00:07:26,720 --> 00:07:32,120
So what I'm going to do now is I'm going to delete this housing project from our global list, so I'm

99
00:07:32,120 --> 00:07:37,780
going to say npm uninstall dashi because again, it's global chaos.

100
00:07:38,810 --> 00:07:40,490
So now this is going to get rid of it.

101
00:07:40,610 --> 00:07:43,130
You'll see that it says removed 41 packages.

102
00:07:43,490 --> 00:07:49,620
And again, if we just double check list, how say what we'll see is that it's empty.

103
00:07:49,790 --> 00:07:51,110
So this is exactly what we wanted.

104
00:07:52,010 --> 00:07:56,360
So now that we have this, let's understand what Ampex does start.

105
00:07:57,110 --> 00:08:01,100
So instead, I'm going to say NTPC's cow, say hello.

106
00:08:02,100 --> 00:08:08,430
And now, if we run this, what we'll see is that we're still downloading the package cassette because

107
00:08:08,430 --> 00:08:14,010
we don't have it and it will execute it immediately before when we did it with npm.

108
00:08:14,070 --> 00:08:18,990
Remember, we downloaded it and then we had to run causeI and then call it.

109
00:08:19,770 --> 00:08:27,510
So here what Ampex does is it directly installs all of the required files for this package and it executes

110
00:08:27,510 --> 00:08:28,380
it immediately.

111
00:08:29,310 --> 00:08:35,520
So what this means, though, is that is that all it is just that it download an extra quickly.

112
00:08:36,030 --> 00:08:36,420
No.

113
00:08:36,810 --> 00:08:42,150
In fact, if we check npm list, say locally, we'll see that it's empty.

114
00:08:42,690 --> 00:08:46,460
If we check npm list Dash Gee say.

115
00:08:47,670 --> 00:08:49,770
We'll also see is that it's empty.

116
00:08:50,130 --> 00:08:56,250
So what this means is that NPCs downloads the packages, the latest package for House, so the latest

117
00:08:56,250 --> 00:09:00,960
version of it and executes it immediately and then it deletes it from the disk.

118
00:09:01,560 --> 00:09:03,750
Now you might be wondering, why do we want to do this?

119
00:09:04,290 --> 00:09:11,340
Well, the main advantage is that one you don't have to clog up your environment or your disc with all

120
00:09:11,340 --> 00:09:15,180
of these different packages that you have to make sure that if you're running the latest version of

121
00:09:15,180 --> 00:09:21,750
it, certain things like this you might just want to use when you need it and make sure that when you

122
00:09:21,750 --> 00:09:23,850
use it, you're using the latest version.

123
00:09:24,540 --> 00:09:30,150
So the benefit here is that when you call NPCs, you are going to ask for the latest version.

124
00:09:30,390 --> 00:09:35,730
Now, of course, you can specify with a argument at version, so you can say, Oh, I want this exact

125
00:09:35,730 --> 00:09:38,370
version instead, and NPCs will download that exact version.

126
00:09:38,550 --> 00:09:43,230
But if you don't pass that, what I'll do is it'll just download the latest version and then execute

127
00:09:43,230 --> 00:09:44,040
it and then delete it.

128
00:09:44,550 --> 00:09:49,950
So that's why it's super useful, because this way we don't have to think and manage the different packages

129
00:09:49,950 --> 00:09:50,820
that we're leveraging.

130
00:09:51,180 --> 00:09:55,860
And this is really useful for something like racked up, because chances are you just want to use the

131
00:09:55,860 --> 00:09:59,550
create racked up library to start up a new React project when you need to.

132
00:09:59,550 --> 00:10:01,290
When you don't, you don't want to use it.

133
00:10:02,070 --> 00:10:09,060
And if we go back to our Sierra folder, where we were running our Create React app with NPCs to get

134
00:10:09,060 --> 00:10:12,620
the latest folder here we see that now it's done.

135
00:10:12,630 --> 00:10:18,270
We have our application called Monster's Rolodex and we can see it right here.

136
00:10:18,750 --> 00:10:20,040
So let's see the into it.

137
00:10:21,250 --> 00:10:26,920
And what we're going to do is we are going to talk and break down about what got generated with create

138
00:10:26,920 --> 00:10:28,540
racked up in the next video.

139
00:10:29,080 --> 00:10:31,400
So here once again, let me just go over quickly.

140
00:10:31,420 --> 00:10:37,750
What we did, we used NPCs to download the Create React app package, the latest version of it.

141
00:10:38,530 --> 00:10:45,760
We generated our React application monster's Rolodex and then with NPCs automatically, it deleted Create

142
00:10:45,760 --> 00:10:49,090
React app, so it doesn't take up any space on our computer.

143
00:10:49,540 --> 00:10:53,520
And now we have our monster's Rolodex React project that create React app.

144
00:10:53,520 --> 00:10:57,160
How scaffolded for us and we are going to break down what is inside.

145
00:10:57,670 --> 00:10:59,830
So with that, I'll see you in the next video.
