1
00:00:00,390 --> 00:00:01,390
Welcome back, everyone.

2
00:00:01,920 --> 00:00:08,400
In the last lesson, we learned how to use fuel to pull in our markdown files and then use them and

3
00:00:08,400 --> 00:00:12,210
their data to populate out this list of our blogs.

4
00:00:12,660 --> 00:00:14,370
Now we're only displaying the excerpts.

5
00:00:14,370 --> 00:00:17,720
So we're not actually explaining the body of our blogs.

6
00:00:18,090 --> 00:00:20,580
We're going to do that in an individual blog page.

7
00:00:21,030 --> 00:00:28,020
And the way we're going to do that is we're actually going to need to leverage this new concept where

8
00:00:28,020 --> 00:00:31,290
what we're going to do is hijack the build step.

9
00:00:31,890 --> 00:00:36,500
Whenever we built out our Gadsby blog, when we ran, Yorn developed for the first time.

10
00:00:37,320 --> 00:00:42,930
We are going to come in here when it creates those nodes which represent the files that we have written

11
00:00:43,200 --> 00:00:44,250
in the first place.

12
00:00:44,730 --> 00:00:50,420
And we're going to grab the markdown and we're going to build out each individual page at that moment.

13
00:00:51,730 --> 00:00:57,040
In order for us to do this, we actually need to modify our Noad Gadsby file.

14
00:00:57,490 --> 00:01:00,310
So in here you'll see that there's this Gatsby Noguez.

15
00:01:01,430 --> 00:01:07,940
In this file, this is code that will run theoretically on the node server that represents The Gatsby

16
00:01:07,940 --> 00:01:08,480
framework.

17
00:01:08,810 --> 00:01:10,080
Now, two things to note here.

18
00:01:10,640 --> 00:01:13,820
The first is that the code that we're going to write is not reachout.

19
00:01:13,940 --> 00:01:19,480
So it might not be something you recognize if you are only used to writing a react.

20
00:01:19,760 --> 00:01:24,560
There's a little bit of back in node code here that we're writing, but it's not completely node either,

21
00:01:24,560 --> 00:01:28,160
because it has to do with the node API inside of Gatsby.

22
00:01:28,550 --> 00:01:33,830
So you can easily take a look at the documentation here if you follow this link inside of your Gatsby

23
00:01:33,850 --> 00:01:34,510
Noguez.

24
00:01:35,240 --> 00:01:39,530
But let's just get started, because once we actually write this code, I'm certain you'll at least

25
00:01:39,530 --> 00:01:42,830
be able to follow along with what's happening because it is JavaScript.

26
00:01:43,480 --> 00:01:44,510
So let's just get rid of this.

27
00:01:44,990 --> 00:01:48,860
And what we're going to say is exports on create a..

28
00:01:50,060 --> 00:01:55,700
So Gatsby is expecting that if you export this method on note, it is equal to a function and they're

29
00:01:55,700 --> 00:02:00,620
going to pass this function a bunch of properties, one of them being the note itself whenever it's

30
00:02:00,620 --> 00:02:01,820
creating the note.

31
00:02:02,090 --> 00:02:07,400
Now, as you remember, when we did our graphical query for our files, each file had a note, which

32
00:02:07,400 --> 00:02:09,470
was a representation of that file.

33
00:02:09,920 --> 00:02:15,260
So what we're going to do is we're just going to simply console log that node object.

34
00:02:15,620 --> 00:02:21,410
There's a property on there called Internal, which just represents data about the actual node itself,

35
00:02:21,750 --> 00:02:22,710
and we want the type.

36
00:02:23,420 --> 00:02:26,420
So now if we refresh our server.

37
00:02:28,260 --> 00:02:29,460
What we're going to see.

38
00:02:30,490 --> 00:02:36,580
Is when it's building, we see this list of all of these different things that we're logging out now,

39
00:02:36,580 --> 00:02:38,770
these are all the types of note that we have available.

40
00:02:39,040 --> 00:02:44,530
And the main ones that we want are the markdown remarks, because, as you remember, the markdown files

41
00:02:44,530 --> 00:02:46,900
is what we want to use to build out our pages.

42
00:02:47,440 --> 00:02:56,500
So what we're going to say is we're going to say if the no internal DOT type is equal to markdown Remarque.

43
00:03:00,410 --> 00:03:05,390
Then what we're going to do is we are actually going to create this thing called a slug.

44
00:03:06,270 --> 00:03:16,200
A slug inside of Gatsby is the you are l or the link that the browser is able to access from our application

45
00:03:16,200 --> 00:03:22,530
in order to navigate to the page required, now we have to dynamically build out the slug and attach

46
00:03:22,530 --> 00:03:28,170
it to the node as a field because we want to access that field inside of our application so that whenever

47
00:03:28,170 --> 00:03:32,240
we try to route to it or link to it, we are always pathing to the correct path.

48
00:03:32,400 --> 00:03:34,590
So we want to build that path out dynamically.

49
00:03:35,450 --> 00:03:41,270
We actually get access inside of this uncreate node function, this other property called actions,

50
00:03:41,300 --> 00:03:43,790
and these are actions that we will receive from Gatsby.

51
00:03:44,360 --> 00:03:50,810
The one that we want to pluck off is this action called Create Noad Field, create an Oldfield's exactly

52
00:03:50,810 --> 00:03:51,370
as it sounds.

53
00:03:51,380 --> 00:03:53,960
We want to add a new field to our node.

54
00:03:54,410 --> 00:03:56,870
So we want to structure this off of our actions.

55
00:03:57,500 --> 00:04:01,280
And what we're going to do is build the field path to our node.

56
00:04:02,900 --> 00:04:08,490
This path is what we're going to be using inside of our application to navigate to this page.

57
00:04:09,050 --> 00:04:14,030
Now, the only thing to keep in mind is that inside of Gatsby, this thing is called a slug.

58
00:04:14,450 --> 00:04:20,480
And a slug is essentially just some kind of file path or navigation path inside of the application that

59
00:04:20,480 --> 00:04:21,590
allows us to route to it.

60
00:04:22,610 --> 00:04:29,330
We actually get access to this function that we get from Gatsby's source, filesystem, Gatsby, source

61
00:04:29,330 --> 00:04:34,130
filesystem, as you remember, was this plug in that we used to actually get access to our files in

62
00:04:34,130 --> 00:04:34,810
the first place.

63
00:04:35,540 --> 00:04:43,280
So in order to bring it in, we are going to structure off create file path from this Gatsby source.

64
00:04:45,290 --> 00:04:45,730
WAPs.

65
00:04:50,160 --> 00:04:56,460
You'll see here that I use batiks now back Tick's is actually what Gatsby prefers you to use when instantiating

66
00:04:56,460 --> 00:04:56,960
string's.

67
00:04:57,090 --> 00:05:01,190
In fact, you should probably change our markdown remark over to using tactics as well.

68
00:05:01,680 --> 00:05:07,440
And this is simply due to the prettier configuration rules that are set with Gatsby when we loaded it

69
00:05:07,440 --> 00:05:08,140
by default.

70
00:05:08,520 --> 00:05:14,340
Now you can actually find these rules inside of this prettier Arcy file in your bass root folder and

71
00:05:14,340 --> 00:05:19,260
prettier, if you're not sure what that is, is pretty much just the tool that allows you to consistently

72
00:05:19,260 --> 00:05:23,550
enforce certain typos and stylings regarding the way that you write code.

73
00:05:24,300 --> 00:05:25,350
Prettier is really great.

74
00:05:25,350 --> 00:05:29,640
If you have an application with many developers that have different ways that they like to write things

75
00:05:30,030 --> 00:05:35,550
with prettier, whenever you save or whenever you actually type anything, you might get warnings telling

76
00:05:35,550 --> 00:05:37,280
you that you cannot do certain things.

77
00:05:37,290 --> 00:05:41,730
So, for example, if I ever try to make this a single string.

78
00:05:43,210 --> 00:05:48,820
Whenever I say pretty or force that to be double quotes, so if we switch over to using tactics, that's

79
00:05:48,820 --> 00:05:49,810
perfectly fine too.

80
00:05:49,840 --> 00:05:53,830
You'll actually find that when you look through your Glaspie files, any file that gets generated by

81
00:05:53,830 --> 00:05:55,360
Gatsby is using tactics.

82
00:05:55,390 --> 00:05:57,960
So it doesn't hurt, doesn't actually impact performance in any way.

83
00:05:58,360 --> 00:06:00,010
So let's just switch over tactics.

84
00:06:00,860 --> 00:06:06,920
But now that we have our file path function from Gatsby, source filesystem, what we want to do is

85
00:06:06,920 --> 00:06:09,120
we actually want to generate that new slug.

86
00:06:09,710 --> 00:06:13,280
Now, the slug itself, as I mentioned, was the root, now the root.

87
00:06:13,280 --> 00:06:16,520
We're going to use our credit file path method and what not.

88
00:06:16,550 --> 00:06:20,810
This create file path method takes is a object as the argument.

89
00:06:21,500 --> 00:06:24,680
The first thing it takes is a node as the first property.

90
00:06:25,310 --> 00:06:30,320
The node property essentially just points to the actual node that we're trying to convert into a file

91
00:06:30,320 --> 00:06:30,640
path.

92
00:06:31,070 --> 00:06:37,550
So as you saw with our pages, what Gatsby does under the hood is it takes the name of the actual file

93
00:06:37,550 --> 00:06:41,780
and it turns it into the literal name of the roots to that page as well.

94
00:06:42,140 --> 00:06:47,470
So if it's page two as the file name, the actual root to the URL is also page two.

95
00:06:48,110 --> 00:06:49,690
So we're going to pass it the node.

96
00:06:50,030 --> 00:06:53,450
We're also going to pass it, the method that it needs to fetch the node.

97
00:06:53,600 --> 00:06:57,070
Now, this is pretty much in the API docs and you just have to follow along.

98
00:06:57,500 --> 00:07:02,420
What it does is you have to get this get node function that we also get from uncreate note.

99
00:07:02,660 --> 00:07:04,430
And we're going to pass that as the second argument.

100
00:07:05,000 --> 00:07:10,910
That node is just a function that allows you to pull the actual node object representation of a file

101
00:07:10,910 --> 00:07:12,290
or an edge.

102
00:07:12,530 --> 00:07:17,030
Now, you remember when we looked at our actual graph cual, we saw that we had nodes, right?

103
00:07:17,450 --> 00:07:21,820
And then we have these edges get node is just a way to get this little node object.

104
00:07:21,830 --> 00:07:25,550
It just uses it under the hood to actually get the required node that it wants.

105
00:07:26,240 --> 00:07:32,990
Third field is an optional field, which is called base path and based path is something that you add

106
00:07:32,990 --> 00:07:35,580
when you want to add a base path to the URL.

107
00:07:35,630 --> 00:07:37,280
In our case, there's no need for it.

108
00:07:37,700 --> 00:07:42,710
So we can just ignore that property and just pass this in as our slug.

109
00:07:43,460 --> 00:07:46,660
Now we're finally going to actually create the node feel on our node.

110
00:07:46,670 --> 00:07:53,180
So what we're going to do is just call it create node field and we're going to pass this an object where

111
00:07:53,180 --> 00:07:56,300
the first property is the node pointing to the same node.

112
00:07:57,200 --> 00:07:58,830
We're also going to put the name.

113
00:07:58,850 --> 00:08:03,340
So this is the name of the property that we want to add and we want to add it called slug.

114
00:08:03,890 --> 00:08:09,000
And the value is going to be the slug itself that we just created using create file path.

115
00:08:09,590 --> 00:08:15,740
So with this, whenever we actually end up creating all of our nodes, we will end up appending onto

116
00:08:15,740 --> 00:08:19,160
that node a new slug property with the value of our strength.

117
00:08:19,880 --> 00:08:26,570
So now if we actually restart our server and we check out our graph qual, once this is finished, we'll

118
00:08:26,600 --> 00:08:31,310
be able to see it on all of our markdown notes, that new field that we added.

119
00:08:33,070 --> 00:08:38,500
So let's just let this finish building, OK, now if we refresh.

120
00:08:39,400 --> 00:08:45,910
You'll see on this note that there's this new thing called fields and in Fields is Slug, which is our

121
00:08:45,910 --> 00:08:47,210
new property that we just added.

122
00:08:47,530 --> 00:08:51,570
So any field that you add to a node goes under this fields property.

123
00:08:52,000 --> 00:08:58,090
And now if we fetch, we'll see inside of our slug, we have the actual root that we need to use to

124
00:08:58,090 --> 00:09:01,610
navigate to the actual root path that we declared.

125
00:09:02,290 --> 00:09:07,120
Now, what we have to do is actually build the pages dynamically, because now that we've set up our

126
00:09:07,120 --> 00:09:10,520
node, we have to actually set up the actual page that we built.

127
00:09:10,570 --> 00:09:12,190
So we'll do that in the next lesson.
