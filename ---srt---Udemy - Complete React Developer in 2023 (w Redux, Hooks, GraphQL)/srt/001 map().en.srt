1
00:00:00,940 --> 00:00:10,270
Now, before we continue, I just want to bring up something very important, so in this course, we

2
00:00:10,270 --> 00:00:18,940
will cover extensively many concepts and react, but also a lot of concepts in JavaScript, because

3
00:00:18,940 --> 00:00:25,120
they will fundamentally play a large role in how we understand the code that we're writing.

4
00:00:26,090 --> 00:00:36,660
Now, the first things I want to focus on are actually Arae methods, particularly these five map filter,

5
00:00:36,680 --> 00:00:39,490
reduce, find and includes.

6
00:00:40,340 --> 00:00:47,990
Now, we may not cover all of them right away because we're not going to use, for example, reduce

7
00:00:47,990 --> 00:00:49,520
until later in the code.

8
00:00:50,470 --> 00:00:58,090
But I want to cover the ones that we will encounter immediately, so even though I'm showing you these

9
00:00:58,090 --> 00:01:04,090
five, don't worry if you feel like you don't know them all right away, I'm definitely going to cover

10
00:01:04,090 --> 00:01:09,510
them just before we have to use them or whenever we do use them.

11
00:01:09,520 --> 00:01:10,870
I'll explain it then.

12
00:01:11,710 --> 00:01:16,440
But this is an important concept, the idea of Arae methods.

13
00:01:17,200 --> 00:01:22,840
The reason for this is because we will use them a lot inside of our record.

14
00:01:23,920 --> 00:01:33,190
Array methods are methods you can call on any array that will perform some kind of action on that array

15
00:01:33,400 --> 00:01:34,670
or with that array.

16
00:01:35,410 --> 00:01:38,910
So I will explore that a little bit later.

17
00:01:39,040 --> 00:01:43,530
But the way that you use these methods is you take any array.

18
00:01:43,540 --> 00:01:49,300
So let's say we make a new array called Meyera, and it's equal to an array of these four numbers.

19
00:01:50,200 --> 00:02:01,810
You're able to call radar map, dot filter, right, dot, reduce, dot, find, dot includes and inside

20
00:02:01,810 --> 00:02:05,470
you would pass it something that it needs in order for it to work.

21
00:02:05,890 --> 00:02:12,040
Now, every Arae method takes something different, which we'll explore, but this is how you use them.

22
00:02:12,700 --> 00:02:15,940
Now, the first one that I definitely want to cover is MAP.

23
00:02:16,390 --> 00:02:20,350
So in order for us to understand map, let's go to our browser.

24
00:02:21,220 --> 00:02:28,210
Now, inside of our browser, we want to access the JavaScript console, so in order to do that, we

25
00:02:28,210 --> 00:02:30,790
have to right click and click inspect.

26
00:02:31,630 --> 00:02:35,520
Now, if you're familiar with the dev tools, you'll know that the console is right here.

27
00:02:35,530 --> 00:02:41,410
But if you're not familiar with the dev tools, this is a great tool that we're going to use to see

28
00:02:41,860 --> 00:02:48,370
how our Web application is either performing or how it ends up being rendered.

29
00:02:48,920 --> 00:02:57,190
But there's lots about this tool that is a very good lens for us to use to see how our application is

30
00:02:57,190 --> 00:02:57,580
doing.

31
00:02:58,620 --> 00:03:04,350
But for this case, we're going to click this console tab up here to go to the JavaScript console.

32
00:03:05,330 --> 00:03:10,620
This allows us to write and run JavaScript code because the browser supports JavaScript.

33
00:03:11,510 --> 00:03:15,530
So what we're going to do is we're going to declare our array again.

34
00:03:16,400 --> 00:03:21,950
So const my array equals an array of one, two, three, four.

35
00:03:24,700 --> 00:03:32,440
What we want to do, for example, to better understand what math does is to understand what we're trying

36
00:03:32,440 --> 00:03:33,120
to get to.

37
00:03:33,670 --> 00:03:35,250
So let's say we have this array.

38
00:03:35,800 --> 00:03:45,010
What if I wanted to increase the value of each element in this array by one so that I get an array of

39
00:03:45,010 --> 00:03:47,080
two, three, four, five?

40
00:03:47,880 --> 00:03:48,940
How do we do this?

41
00:03:49,500 --> 00:03:53,170
Well, one way might be to write a for loop, which you are familiar with, right?

42
00:03:53,190 --> 00:04:00,240
We might write something where we loop over the an array, the array, we get the value right and then

43
00:04:00,240 --> 00:04:00,950
we increase it.

44
00:04:01,680 --> 00:04:06,960
But that's kind of very similar to what MAP does, but in a more efficient way.

45
00:04:07,440 --> 00:04:09,830
Plus, MAP gives us a new array back.

46
00:04:10,440 --> 00:04:14,340
So what we would write is map Meyera dot map.

47
00:04:15,390 --> 00:04:23,670
And then inside, we pass a function that gets called on each element in the array in the order that

48
00:04:23,670 --> 00:04:31,380
they appear, we actually get that element in our function as the first parameter of our function.

49
00:04:31,830 --> 00:04:34,410
So our first parameter being the element.

50
00:04:35,100 --> 00:04:42,900
And then whatever we return from this function will be the value in our new array in the place where

51
00:04:43,170 --> 00:04:45,550
that element was in the original array.

52
00:04:46,350 --> 00:04:54,210
So if we do element plus one, then we'll get two, three, four or five because we're just taking the

53
00:04:54,210 --> 00:04:59,520
element from that place and adding one and returning it in a brand new array.

54
00:05:00,780 --> 00:05:07,060
We don't even have to use the element we could actually, instead of mapping with the element, right,

55
00:05:07,080 --> 00:05:12,930
we could pass nothing through and just return the letter B and what will get.

56
00:05:14,340 --> 00:05:15,630
Don't eat the return.

57
00:05:17,580 --> 00:05:26,990
And what we'll get is be in four places where this function was called on each element in the array,

58
00:05:27,390 --> 00:05:28,930
but this is also a new era.

59
00:05:29,370 --> 00:05:32,940
We know this because Meyera is still one, two, three, four.

60
00:05:34,470 --> 00:05:43,050
So this is what map does, it lets us create new arrays based on our existing arrays and this is really

61
00:05:43,050 --> 00:05:47,610
handy and we'll use it extensively when building our application.
