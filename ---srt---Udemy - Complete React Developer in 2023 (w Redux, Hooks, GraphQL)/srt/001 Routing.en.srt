1
00:00:00,850 --> 00:00:09,060
In this video, we are going to cover a very important topic and that is routing so typically with react,

2
00:00:09,070 --> 00:00:14,560
you either are going to use one of two main libraries, at least the majority of React projects, while

3
00:00:15,100 --> 00:00:18,890
you're either going to use React router or you're going to use recruiter.

4
00:00:19,540 --> 00:00:26,110
They both are different libraries that essentially tackle the same topic, which is how do you determine

5
00:00:26,110 --> 00:00:30,250
based off the URL, i.e. the navigation on a website?

6
00:00:30,700 --> 00:00:34,000
What pages to render, remember and react?

7
00:00:34,000 --> 00:00:35,800
Everything is a component.

8
00:00:35,830 --> 00:00:38,500
So you want to think about pages the same way?

9
00:00:38,980 --> 00:00:41,200
So let's look at a visual example.

10
00:00:41,210 --> 00:00:46,270
So at a high level, we understand what these libraries are doing because while these libraries are

11
00:00:46,270 --> 00:00:50,770
different and they'll go through iterations and they'll go through different versions, essentially

12
00:00:50,770 --> 00:00:52,830
they are trying to achieve the same thing.

13
00:00:52,840 --> 00:00:58,210
And as long as you're able to understand the high level topic, what the actual implementation details

14
00:00:58,210 --> 00:01:01,000
are is largely not that important.

15
00:01:01,660 --> 00:01:06,100
So imagine that you had your browser inside your browser.

16
00:01:06,130 --> 00:01:09,460
You have your website, your URL, you're all based.

17
00:01:09,460 --> 00:01:14,170
Navigation is pretty much the standard way that we navigate through a website.

18
00:01:14,710 --> 00:01:21,490
Let's say on this website, when you land on your home page, you have some component, like a navigation

19
00:01:21,490 --> 00:01:21,760
bar.

20
00:01:22,700 --> 00:01:24,890
Those little black lines.

21
00:01:25,010 --> 00:01:29,780
Imagine that those are different lengths that take you to different routes on this website.

22
00:01:30,320 --> 00:01:35,360
Let's say that you selected the first website and it takes you to, let's just say, crown clothing

23
00:01:35,360 --> 00:01:39,410
and then Route one when you navigate here.

24
00:01:39,770 --> 00:01:43,160
We might expect a specific page to render.

25
00:01:43,940 --> 00:01:48,700
What will notice, though, is that that page is an entire component.

26
00:01:48,710 --> 00:01:50,000
I want you to think about it like that.

27
00:01:50,360 --> 00:01:56,810
Imagine that entire page that just got rendered when we navigate to Route one is a brand new component

28
00:01:57,110 --> 00:02:01,340
that we mount onto the page in response to navigating to Route one.

29
00:02:01,790 --> 00:02:06,620
Now what I want you to notice, though, is that the navigation bar component is still there.

30
00:02:07,070 --> 00:02:11,240
I've created out a little so you can see and highlight which link we're currently on.

31
00:02:11,780 --> 00:02:17,480
But if you think about a lot of our applications, we know that in many applications, regardless of

32
00:02:17,480 --> 00:02:22,370
where you navigate onto the page, there are certain components that are always there, particularly

33
00:02:22,370 --> 00:02:26,390
navigation bars, side panels, all of those are always present.

34
00:02:26,690 --> 00:02:32,450
And the libraries that we use, whether it be React router or recruiter, should allow us that functionality.

35
00:02:32,840 --> 00:02:37,310
We should be able to modify and change what lives on the page based on the route.

36
00:02:37,490 --> 00:02:41,570
And what's changing is going to be what components render and don't render.

37
00:02:41,870 --> 00:02:46,730
So in our particular case with the navigation bar, most of the time we probably always want it there.

38
00:02:47,120 --> 00:02:52,010
So there's a composition here that's important to think about because it really extends into how you

39
00:02:52,010 --> 00:02:53,990
would intuitively build applications.

40
00:02:54,410 --> 00:02:55,880
So we know we have a navigation bar.

41
00:02:56,030 --> 00:03:01,160
The content below the navigation bar is the one that typically changes on the route change.

42
00:03:01,730 --> 00:03:03,080
So here we see out route one.

43
00:03:03,200 --> 00:03:08,300
We've rendered in this different component at the bottom that reflects a page.

44
00:03:09,050 --> 00:03:13,540
Now, let's say, instead, we navigate to route to the second link here.

45
00:03:13,550 --> 00:03:19,710
What should happen is that we should render in some new content, as we expect on the side here.

46
00:03:19,730 --> 00:03:22,940
I want you to notice that there is now this sidebar.

47
00:03:23,540 --> 00:03:31,700
This sidebar might be some kind of navigation for the content within this route, meaning that depending

48
00:03:31,700 --> 00:03:38,690
on what you select inside of this side navigation, it may also additionally determine what gets rendered

49
00:03:38,720 --> 00:03:40,040
on the content to the right.

50
00:03:40,760 --> 00:03:46,310
So this you can imagine as a sub route within a main route that we're nesting in.

51
00:03:46,490 --> 00:03:49,400
This is a very common pattern that you see in web applications as well.

52
00:03:49,490 --> 00:03:52,730
Some things, like Facebook Messenger chat is a good example of this.

53
00:03:53,000 --> 00:03:57,110
Depending on what you choose, the continental right will render a different conversation.

54
00:03:57,680 --> 00:04:01,400
So similarly here, let's imagine that we selected the first link.

55
00:04:01,940 --> 00:04:06,050
We might render some specific things inside of here.

56
00:04:06,170 --> 00:04:12,620
If you look at the URL, you'll notice that now we're saying route to slash sub route one, meaning

57
00:04:12,620 --> 00:04:19,490
that we're in the first sub route of Route two, which is indicated by the first link that we've clicked

58
00:04:19,490 --> 00:04:20,780
in our sidebar.

59
00:04:21,230 --> 00:04:27,050
So the right content reflects accordingly because the right content is the components that are being

60
00:04:27,050 --> 00:04:29,000
rendered regarding this route.

61
00:04:29,750 --> 00:04:36,410
Now, let's say, for example, we chose a different route sub route to inside of our sidebar navigation.

62
00:04:36,770 --> 00:04:40,430
Here, of course, we expect the content inside to change again.

63
00:04:41,060 --> 00:04:46,460
So what I'm hoping that these diagrams have shown you is a very common pattern that we see throughout

64
00:04:46,610 --> 00:04:48,080
different web applications.

65
00:04:48,500 --> 00:04:54,050
We know that depending on the routes that we navigate to, certain parts of the page may change.

66
00:04:54,350 --> 00:05:00,200
Certain parts may not, such as navigation bars within the parts of the pages that are changing as we

67
00:05:00,200 --> 00:05:03,650
move throughout the application by routing to different links.

68
00:05:04,190 --> 00:05:11,000
There may be certain routes that have components that stay with deeper subreddits.

69
00:05:11,690 --> 00:05:18,170
So in those sub routes, an even smaller portion of that website is rendering and coming in with new

70
00:05:18,170 --> 00:05:20,240
components and showing new content.

71
00:05:20,570 --> 00:05:27,500
But as we've seen here with our side navigation bar nested in route to that component may also stay

72
00:05:27,500 --> 00:05:34,900
as long as you're nesting in Route two and navigating through these nested sub routes inside of rap

73
00:05:34,910 --> 00:05:35,210
too.

74
00:05:35,810 --> 00:05:42,530
Now, once again, perhaps if we were to change the main route, let's say we went to Route three in

75
00:05:42,530 --> 00:05:43,400
this particular case.

76
00:05:43,400 --> 00:05:50,390
Of course, everything underneath the main navigation bar renders and that is expected behavior based

77
00:05:50,390 --> 00:05:51,890
on what we've been discussing so far.

78
00:05:52,340 --> 00:05:58,130
So again, this is a very common pattern that you see in how websites are built throughout probably

79
00:05:58,130 --> 00:06:00,890
the majority of the web applications you use on your day to day.

80
00:06:01,280 --> 00:06:06,890
We just want to be able to replicate this behavior with routing inside of our own application.

81
00:06:07,160 --> 00:06:10,070
In this particular app, we're going to be using React router.

82
00:06:10,610 --> 00:06:15,830
So in the next video, let's learn how to implement the newest version of React router inside of our

83
00:06:15,830 --> 00:06:16,430
application.

84
00:06:16,900 --> 00:06:17,870
I'll see in the next video.
