1
00:00:00,390 --> 00:00:01,380
Welcome back, everyone.

2
00:00:02,130 --> 00:00:09,270
In this video, we are trying to build in the decrement, so for decrement, let's go into our to context

3
00:00:09,600 --> 00:00:15,150
as we know if this is where we did our ad item, we're probably going to do a similar remove item here

4
00:00:15,150 --> 00:00:15,570
as well.

5
00:00:16,440 --> 00:00:22,260
So what I want to do is I want to make another method called remove item from cart.

6
00:00:22,830 --> 00:00:26,970
And this is going to be a function that we need to figure out.

7
00:00:28,190 --> 00:00:33,440
So remove item from cart is probably going to be very similar to how we set up our ad item to cart.

8
00:00:33,770 --> 00:00:38,390
So here let's just duplicate our method call it remove item to cart.

9
00:00:38,990 --> 00:00:42,290
And what we're going to receive is the product to remove.

10
00:00:42,680 --> 00:00:47,240
We know that we're most likely going to want to get this product because with this product, will we

11
00:00:47,240 --> 00:00:48,950
actually delete the cart item?

12
00:00:49,580 --> 00:00:55,010
So here, instead of even calling a product to remove, we know that most likely it's going to be a

13
00:00:55,010 --> 00:00:59,630
cart item in the first place, so we can even be more explicit instead of calling a product to remove.

14
00:00:59,780 --> 00:01:02,120
We can't call it cart item to remove.

15
00:01:04,150 --> 00:01:07,960
So now what we need to do is we know we are updating our items.

16
00:01:08,410 --> 00:01:13,540
But instead of calling this add item method, we probably want to create another helper.

17
00:01:14,410 --> 00:01:16,450
So let's think about what we want this to do.

18
00:01:16,720 --> 00:01:23,260
So I'm going to call it remove cart item like so we know that we want to get the original cart items

19
00:01:23,260 --> 00:01:28,870
away because we're going to use this array to create a new array where we've either increased the quantity

20
00:01:28,870 --> 00:01:34,180
of one of these cart items or we've removed an item entirely if the previous quantity was at one.

21
00:01:35,200 --> 00:01:39,250
The next thing that we know we need is the cart item to remove.

22
00:01:41,770 --> 00:01:47,170
And now what we need beyond this is let's think about the functionality.

23
00:01:48,110 --> 00:01:53,990
Inside of our car items, we know that we're removing a car item that already exists, so we need to

24
00:01:53,990 --> 00:01:56,820
find the car item to remove.

25
00:01:57,410 --> 00:02:00,230
We need to find the one that already exists inside of our right.

26
00:02:00,830 --> 00:02:06,650
And then what we need to do is we need to check if quantity is equal to one.

27
00:02:07,400 --> 00:02:10,670
If it is, remove that item from the car.

28
00:02:11,900 --> 00:02:12,620
That much is.

29
00:02:13,920 --> 00:02:15,090
The logic that we've described.

30
00:02:16,050 --> 00:02:26,400
If it isn't, then what we do is return back carte items with matching cart item with reduced quantity.

31
00:02:29,730 --> 00:02:31,110
That much also makes sense.

32
00:02:31,560 --> 00:02:33,270
So let's figure out what we need to do here.

33
00:02:34,140 --> 00:02:36,780
Well, first, we need to find the existing cart item.

34
00:02:37,050 --> 00:02:43,530
So what we can do is we can actually take this method over that does exactly this, except instead of

35
00:02:43,560 --> 00:02:47,050
using the product to add, we're going to use our new cart item to remove.

36
00:02:47,490 --> 00:02:50,850
They're both going to be the same shape and have the same I.D..

37
00:02:51,870 --> 00:02:57,720
Next, what we need to do is we need to now check if the quantity of this item is equal to one.

38
00:02:58,560 --> 00:03:04,260
Now if it is equal to one, then what we need to do is we need to remove this from a new set of cart

39
00:03:04,260 --> 00:03:04,600
items.

40
00:03:05,340 --> 00:03:08,040
So to do that, let's use the filter method.

41
00:03:08,490 --> 00:03:15,960
As we know, Filter gives us back a new array where the array is going to have removed whatever matches.

42
00:03:16,560 --> 00:03:18,210
So here I'm going to say that.

43
00:03:19,800 --> 00:03:27,690
If existing cart item dot quantity is equal to one.

44
00:03:28,850 --> 00:03:33,470
Then just return back carte items don't filter.

45
00:03:34,610 --> 00:03:43,700
And what we're going to do is get a cart item and just say if the cart item ID does not equal cart item

46
00:03:43,700 --> 00:03:45,250
to remove it.

47
00:03:46,570 --> 00:03:51,820
So if this seems a little bit unintuitive, the reason why is because we're saying, Hey, I want you

48
00:03:51,820 --> 00:03:56,050
to filter out anything here that equals false.

49
00:03:56,470 --> 00:04:01,630
So what this means is that if this statement evaluates true, then keep the value.

50
00:04:02,170 --> 00:04:07,390
So we're saying if the Item ID does not equal the one we're trying to remove, keep the value that makes

51
00:04:07,390 --> 00:04:08,010
perfect sense.

52
00:04:08,020 --> 00:04:15,010
We only want to remove the value where the car item ID is equal to the one we try to remove.

53
00:04:15,340 --> 00:04:17,830
So that's how filter kind of works in reverse here.

54
00:04:17,830 --> 00:04:20,650
Or at least it seems a little unintuitive way that we've written it.

55
00:04:22,050 --> 00:04:28,770
But now, once we have removed out when quantity is one, then all that's left to do is pretty much

56
00:04:28,770 --> 00:04:31,050
just duplicate what we had here.

57
00:04:32,330 --> 00:04:34,580
And all we can do is really just copy this over.

58
00:04:36,030 --> 00:04:42,390
And all we need to do differently is instead of incrementing quantity, we decrement the quantity.

59
00:04:42,690 --> 00:04:47,130
And of course, we use car item to remove instead of product to add.

60
00:04:48,170 --> 00:04:52,400
So if you look at it, we're just mapping through all of our car items and we're saying, Hey, if your

61
00:04:52,400 --> 00:04:54,410
I.D. matches the one we're trying to remove.

62
00:04:54,980 --> 00:05:01,190
Give us a new object with the same card item properties, except the quantity has been reduced by one.

63
00:05:02,590 --> 00:05:07,870
Some of you might be wondering, why is it that we're always creating a new object?

64
00:05:08,320 --> 00:05:15,850
Remember that with React, the only way that a React component, which in our case is going to be either

65
00:05:15,850 --> 00:05:20,560
this new checkout item that we haven't made or even the car items that we have made.

66
00:05:21,010 --> 00:05:22,150
What do they receive?

67
00:05:22,840 --> 00:05:28,450
They receive an individual cart item as the actual prop value that they have.

68
00:05:28,480 --> 00:05:29,140
Let's look at it.

69
00:05:29,530 --> 00:05:30,370
Let's look at this component.

70
00:05:30,940 --> 00:05:34,390
We receive a cart item as the object and off this object.

71
00:05:34,390 --> 00:05:40,570
Do we render the UI if we get back the same object with the value mutated?

72
00:05:40,840 --> 00:05:45,250
React doesn't register that this cart item is different, so it's not going to re render the component

73
00:05:45,850 --> 00:05:49,660
where as because we are generating a new object.

74
00:05:49,720 --> 00:05:54,910
When Rick receives that object, it is going to say, Oh, this prop is different, then I can re render

75
00:05:54,910 --> 00:06:00,430
the UI and in turn reflect the new reduced quantity or the new increased quantity.

76
00:06:00,760 --> 00:06:02,890
This all has to do with reacts rendering.

77
00:06:04,180 --> 00:06:08,140
So now all we need to do is, again, just replace our.

78
00:06:09,480 --> 00:06:15,070
Method here inside of remove items of cards and then pass this through as an argument.

79
00:06:15,600 --> 00:06:19,770
We can now include this inside of our appropriate.

80
00:06:20,820 --> 00:06:21,630
Check out component.

81
00:06:25,250 --> 00:06:27,140
And let's just also.

82
00:06:28,220 --> 00:06:29,120
Abstract this off.

83
00:06:30,130 --> 00:06:33,370
And then we can simply add an on click here.

84
00:06:35,310 --> 00:06:40,230
Where we call or remove item with the item.

85
00:06:41,040 --> 00:06:41,940
Let's save this.

86
00:06:42,480 --> 00:06:43,380
Let's come back here.

87
00:06:44,620 --> 00:06:49,000
And because we've rendered we need to re add items to our cart.

88
00:06:50,710 --> 00:06:51,400
Let's come back.

89
00:06:51,820 --> 00:06:52,710
Let's go to the checkout.

90
00:06:53,230 --> 00:06:54,190
Let's make sure it works.

91
00:06:54,460 --> 00:06:55,210
We decrement.

92
00:06:55,930 --> 00:06:56,650
Look, it's working.

93
00:06:57,100 --> 00:07:00,820
We also see it reflected inside of our cart because everything is tied together.

94
00:07:01,240 --> 00:07:04,840
And now if I decrement one more time, I remove the item entirely.

95
00:07:05,590 --> 00:07:07,840
I continued, recommending, I've removed all the items.

96
00:07:08,140 --> 00:07:08,630
There we go.

97
00:07:08,650 --> 00:07:10,630
We've added in our functionality.

98
00:07:11,230 --> 00:07:18,250
So now what I want to do is I want to style out this component so that it looks closer to our actual

99
00:07:18,250 --> 00:07:19,390
final checkout page.

100
00:07:20,200 --> 00:07:21,190
So how do we do this?

101
00:07:21,610 --> 00:07:23,740
Well, let's figure this out in the next video.
